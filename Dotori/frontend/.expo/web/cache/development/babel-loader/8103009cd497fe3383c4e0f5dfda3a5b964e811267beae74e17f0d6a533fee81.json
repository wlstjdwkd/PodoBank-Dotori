{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport HeaderComponent from \"../Components/HeaderScreen\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userPasswordChange } from \"../../apis/userapi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PasswordChangeScreen(_ref) {\n  var _ref2;\n  var navigation = _ref.navigation;\n  var grantType = useSelector(function (state) {\n    return state.user.grantType;\n  });\n  var accessToken = useSelector(function (state) {\n    return state.user.accessToken;\n  });\n  var refreshToken = useSelector(function (state) {\n    return state.user.refreshToken;\n  });\n  var dispatch = useDispatch();\n  var currentPasswordRef = useRef(null);\n  var changePasswordRef = useRef(null);\n  var changeConfirmPasswordRef = useRef(null);\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentPassword = _useState2[0],\n    setCurrentPassword = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    changePassword = _useState4[0],\n    setChangePassword = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    changeConfirmPassword = _useState6[0],\n    setChangeConfirmPassword = _useState6[1];\n  var _useState7 = useState({\n      currentPwMessage: \"\",\n      changePwMessage: \"\",\n      confirmChangePwMessage: \"\",\n      responseMessage: \"\"\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    pwMessage = _useState8[0],\n    setPwMessage = _useState8[1];\n  var _useState9 = useState({\n      isCurrentPwValid: false,\n      isChangePwValid: false,\n      isConfirmPwValid: false,\n      isCanChange: false,\n      responseResult: true\n    }),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isValidPw = _useState10[0],\n    setIsValidPw = _useState10[1];\n  var validatePassword = function validatePassword(password) {\n    var regex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,16}$/;\n    return regex.test(password);\n  };\n  var handlePasswordCurrentCheck = function handlePasswordCurrentCheck(text) {\n    setCurrentPassword(text);\n    if (validatePassword(text)) {\n      setPwMessage(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          currentPwMessage: ''\n        });\n      });\n      setIsValidPw(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isCurrentPwValid: true\n        });\n      });\n    } else {\n      setPwMessage(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          currentPwMessage: '비밀번호를 다시 확인해주세요!'\n        });\n      });\n      setIsValidPw(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isCurrentPwValid: false\n        });\n      });\n    }\n  };\n  var handlePasswordChangeCheck = function handlePasswordChangeCheck(text) {\n    setChangePassword(text);\n    if (validatePassword(text) && text != currentPassword) {\n      setPwMessage(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          changePwMessage: '완벽합니다.'\n        });\n      });\n      setIsValidPw(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isChangePwValid: true\n        });\n      });\n    } else if (text === currentPassword) {\n      setPwMessage(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          changePwMessage: '이전과 동일한 비밀번호는 사용할 수 없습니다.'\n        });\n      });\n      setIsValidPw(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isChangePwValid: false\n        });\n      });\n    } else {\n      setPwMessage(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          changePwMessage: '양식을 맞춰주세요!'\n        });\n      });\n      setIsValidPw(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isChangePwValid: false\n        });\n      });\n    }\n  };\n  var handleConfirmPasswordChangeCheck = function handleConfirmPasswordChangeCheck(text) {\n    setChangeConfirmPassword(text);\n    if (text === changePassword && validatePassword(text) && text != currentPassword) {\n      setPwMessage(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          confirmChangePwMessage: '비밀번호가 일치합니다.'\n        });\n      });\n      setIsValidPw(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isConfirmPwValid: true\n        });\n      });\n    } else if (text === currentPassword) {\n      setPwMessage(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          confirmChangePwMessage: '이전과 동일한 비밀번호는 사용할 수 없습니다.'\n        });\n      });\n      setIsValidPw(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isConfirmPwValid: false\n        });\n      });\n    } else {\n      setPwMessage(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          confirmChangePwMessage: '비밀번호가 일치하지 않습니다.'\n        });\n      });\n      setIsValidPw(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isConfirmPwValid: false\n        });\n      });\n    }\n  };\n  var handleUserPasswordChange = function handleUserPasswordChange() {\n    if (isValidPw.isCanChange) {\n      doUserPasswordChange();\n    } else {\n      switch (!isValidPw.isConfirmPwValid) {\n        case !isValidPw.isCurrentPwValid:\n          setPwMessage(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              responseMessage: \"현재 비밀번호를 확인해주세요.\"\n            });\n          });\n          currentPasswordRef.current.focus();\n          break;\n        case !isValidPw.isChangePwValid:\n          setPwMessage(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              responseMessage: \"변경할 비밀번호를 확인해주세요.\"\n            });\n          });\n          changePasswordRef.current.focus();\n          break;\n        default:\n          setPwMessage(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              responseMessage: \"비밀번호 확인 부분을 확인해주세요.\"\n            });\n          });\n          changeConfirmPasswordRef.current.focus();\n          break;\n      }\n    }\n  };\n  var doUserPasswordChange = function doUserPasswordChange() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      var data = {\n        \"beforePassword\": currentPassword,\n        \"afterPassword\": changeConfirmPassword\n      };\n      try {\n        var response = yield userPasswordChange(data, accessToken, grantType);\n        if (response.status === 200) {\n          console.log('비밀번호 변경 성공');\n          setIsValidPw(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              responseResult: true\n            });\n          });\n          setPwMessage(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              responseMessage: \"비밀번호가 변경되었습니다.\"\n            });\n          });\n          Alert.alert('', '비밀번호가 변경되었습니다.');\n          navigation.navigate(\"MyPageScreen\");\n        } else if (response.status === 403) {\n          setIsValidPw(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              responseResult: false\n            });\n          });\n          console.log('비밀번호 변경 실패', response.status);\n          console.log(response.data);\n          setIsValidPw(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              responseResult: false\n            });\n          });\n          setPwMessage(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              responseMessage: response.data\n            });\n          });\n        } else if (response.status === 404) {\n          console.log('비밀번호 변경 실패', response.status);\n          console.log(response.data);\n          setIsValidPw(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              responseResult: false\n            });\n          });\n          setPwMessage(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              responseMessage: response.data\n            });\n          });\n        } else {\n          setIsValidPw(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              responseResult: false\n            });\n          });\n          console.log('오류 발생 : 비밀번호 변경 실패', response.status);\n        }\n      } catch (error) {\n        setIsValidPw(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            responseResult: false\n          });\n        });\n        console.log(\"오류 발생 : 비밀번호 변경 실패\", error);\n      }\n    })).apply(this, arguments);\n  };\n  useEffect(function () {\n    currentPasswordRef.current.focus();\n  }, []);\n  useEffect(function () {\n    if (isValidPw.isCurrentPwValid && isValidPw.isChangePwValid && isValidPw.isConfirmPwValid) {\n      setIsValidPw(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isCanChange: true\n        });\n      });\n      setPwMessage(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          responseMessage: \"비밀번호 변경 가능\"\n        });\n      });\n    } else {\n      if (currentPassword || changePassword || changeConfirmPassword) {\n        setPwMessage(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            responseMessage: \"비밀번호 변경 중\"\n          });\n        });\n      }\n      setIsValidPw(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isCanChange: false\n        });\n      });\n    }\n  }, [isValidPw.isCurrentPwValid, isValidPw.isChangePwValid, isValidPw.isConfirmPwValid]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(HeaderComponent, {\n      title: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\",\n      navigation: navigation\n    }), _jsx(View, {\n      style: styles.iconContainer,\n      children: _jsx(Image, {\n        style: styles.lockIcon,\n        source: require(\"../../assets/icon/lock.png\")\n      })\n    }), _jsxs(View, {\n      style: styles.passwordInput,\n      children: [_jsx(Text, {\n        style: styles.passwordPlaceholder,\n        children: \"*\"\n      }), _jsx(Text, {\n        style: styles.passwordPlaceholder,\n        children: \"*\"\n      }), _jsx(Text, {\n        style: styles.passwordPlaceholder,\n        children: \"*\"\n      }), _jsx(Text, {\n        style: styles.passwordPlaceholder,\n        children: \"*\"\n      })]\n    }), _jsxs(View, {\n      style: styles.passwordInfoContainer,\n      children: [_jsx(Text, {\n        style: styles.passwordChangeInfoText,\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uBCC0\\uACBD\\uD574 \\uC8FC\\uC138\\uC694!\"\n      }), _jsx(Text, {\n        style: styles.passwordInfoText,\n        children: \"\\uAE30\\uC874\\uC758 \\uBE44\\uBC00\\uBC88\\uD638\\uC640 \\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n      })]\n    }), _jsx(TextInput, {\n      style: styles.inputBox,\n      placeholder: \"\\uD604\\uC7AC \\uBE44\\uBC00\\uBC88\\uD638\",\n      secureTextEntry: true,\n      returnKeyType: \"next\",\n      ref: currentPasswordRef,\n      value: currentPassword,\n      onChangeText: function onChangeText(text) {\n        handlePasswordCurrentCheck(text);\n      },\n      maxLength: 16,\n      onSubmitEditing: function onSubmitEditing() {\n        changePasswordRef.current.focus();\n      }\n    }), _jsx(Text, {\n      style: [styles.pwMessage, {\n        color: isValidPw.isCurrentPwValid ? \"blue\" : \"red\"\n      }],\n      children: pwMessage.currentPwMessage\n    }), _jsx(TextInput, {\n      style: styles.inputBox,\n      placeholder: \"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638\",\n      secureTextEntry: true,\n      returnKeyType: \"next\",\n      ref: changePasswordRef,\n      value: changePassword,\n      onChangeText: function onChangeText(text) {\n        handlePasswordChangeCheck(text);\n      },\n      maxLength: 16,\n      onSubmitEditing: function onSubmitEditing() {\n        changeConfirmPasswordRef.current.focus();\n      }\n    }), _jsx(Text, {\n      style: [styles.pwMessage, {\n        color: isValidPw.isChangePwValid ? \"blue\" : \"red\"\n      }],\n      children: pwMessage.changePwMessage\n    }), _jsx(TextInput, {\n      style: styles.inputBox,\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n      secureTextEntry: true,\n      returnKeyType: \"done\",\n      ref: changeConfirmPasswordRef,\n      value: changeConfirmPassword,\n      onChangeText: function onChangeText(text) {\n        handleConfirmPasswordChangeCheck(text);\n      },\n      maxLength: 16,\n      onSubmitEditing: function onSubmitEditing() {\n        handleUserPasswordChange();\n      }\n    }), _jsx(Text, {\n      style: [styles.pwMessage, {\n        color: isValidPw.isConfirmPwValid ? \"blue\" : \"red\"\n      }],\n      children: pwMessage.confirmChangePwMessage\n    }), _jsx(View, {\n      style: {},\n      children: _jsx(Text, {\n        style: {\n          textAlign: 'center',\n          color: isValidPw.isCanChange && isValidPw.responseResult ? \"blue\" : \"red\"\n        },\n        children: pwMessage.responseMessage\n      })\n    }), _jsx(TouchableOpacity, {\n      style: [styles.changePasswordButton, {\n        backgroundColor: isValidPw.isCanChange ? \"#FF965C\" : 'grey'\n      }],\n      onPress: function onPress() {\n        handleUserPasswordChange();\n      },\n      disabled: !isValidPw.isCanChange,\n      children: _jsx(Text, {\n        style: styles.changePasswordButtonText,\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    padding: 16\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 16,\n    marginTop: 15\n  },\n  arrowIcon: {\n    width: 20,\n    height: 20\n  },\n  iconContainer: {\n    alignItems: \"center\",\n    marginTop: 50\n  },\n  lockIcon: {\n    width: 100,\n    height: 100,\n    marginBottom: 8\n  },\n  passwordInput: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 16\n  },\n  passwordPlaceholder: {\n    fontSize: 24,\n    borderBottomWidth: 1,\n    width: 20,\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n    marginLeft: 10,\n    marginTop: 10,\n    marginBottom: 30\n  },\n  passwordChangeText: {\n    fontSize: 24,\n    flex: 1,\n    textAlign: \"center\"\n  },\n  passwordInfoContainer: {\n    alignItems: \"center\",\n    marginBottom: 60\n  },\n  passwordChangeInfoText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  passwordInfoText: {\n    fontSize: 14,\n    color: \"#7B7B7B\"\n  },\n  inputBox: {\n    borderWidth: 1,\n    backgroundColor: \"#F5F3F3\",\n    borderColor: \"#BAC0CA\",\n    borderRadius: 10,\n    padding: 6,\n    fontSize: 12,\n    paddingLeft: 12,\n    marginHorizontal: 20,\n    width: \"90%\",\n    alignSelf: \"center\"\n  },\n  changePasswordButton: {\n    backgroundColor: \"#FF965C\",\n    borderRadius: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 40,\n    marginTop: 16,\n    width: \"90%\",\n    alignSelf: \"center\"\n  },\n  changePasswordButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 15\n  },\n  pwMessage: {\n    marginTop: 0,\n    marginBottom: 10,\n    fontSize: 12,\n    marginHorizontal: 20\n  }\n});","map":{"version":3,"names":["React","useEffect","useRef","useState","View","Text","StyleSheet","TouchableOpacity","Image","TextInput","Button","Alert","HeaderComponent","useDispatch","useSelector","userPasswordChange","jsx","_jsx","jsxs","_jsxs","PasswordChangeScreen","_ref","_ref2","navigation","grantType","state","user","accessToken","refreshToken","dispatch","currentPasswordRef","changePasswordRef","changeConfirmPasswordRef","_useState","_useState2","_slicedToArray","currentPassword","setCurrentPassword","_useState3","_useState4","changePassword","setChangePassword","_useState5","_useState6","changeConfirmPassword","setChangeConfirmPassword","_useState7","currentPwMessage","changePwMessage","confirmChangePwMessage","responseMessage","_useState8","pwMessage","setPwMessage","_useState9","isCurrentPwValid","isChangePwValid","isConfirmPwValid","isCanChange","responseResult","_useState10","isValidPw","setIsValidPw","validatePassword","password","regex","test","handlePasswordCurrentCheck","text","prev","_objectSpread","handlePasswordChangeCheck","handleConfirmPasswordChangeCheck","handleUserPasswordChange","doUserPasswordChange","current","focus","_asyncToGenerator","data","response","status","console","log","alert","navigate","error","apply","arguments","style","styles","container","children","title","iconContainer","lockIcon","source","require","passwordInput","passwordPlaceholder","passwordInfoContainer","passwordChangeInfoText","passwordInfoText","inputBox","placeholder","secureTextEntry","returnKeyType","ref","value","onChangeText","maxLength","onSubmitEditing","color","textAlign","changePasswordButton","backgroundColor","onPress","disabled","changePasswordButtonText","create","flex","padding","header","flexDirection","alignItems","marginBottom","marginTop","arrowIcon","width","height","justifyContent","fontSize","borderBottomWidth","fontWeight","marginLeft","passwordChangeText","borderWidth","borderColor","borderRadius","paddingLeft","marginHorizontal","alignSelf"],"sources":["C:/Users/SSAFY/Desktop/S09P22D107/Dotori/frontend/src/screens/MyPage/PasswordChangeScreen.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  Alert,\r\n} from \"react-native\";\r\nimport HeaderComponent from \"../Components/HeaderScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {userPasswordChange} from \"../../apis/userapi\"\r\n\r\nexport default function PasswordChangeScreen({ navigation }) {\r\n  // 토큰\r\n  const grantType =  useSelector((state)=>state.user.grantType)\r\n  const accessToken =  useSelector((state)=>state.user.accessToken)\r\n  const refreshToken =  useSelector((state)=>state.user.refreshToken)\r\n  const dispatch = useDispatch()\r\n  // 그 외\r\n  const currentPasswordRef = useRef(null)\r\n  const changePasswordRef = useRef(null)\r\n  const changeConfirmPasswordRef = useRef(null)\r\n  const [currentPassword, setCurrentPassword] = useState(\"\")\r\n  const [changePassword, setChangePassword] = useState(\"\")\r\n  const [changeConfirmPassword, setChangeConfirmPassword] = useState(\"\")\r\n  const [pwMessage, setPwMessage] = useState({\r\n    currentPwMessage : \"\",\r\n    changePwMessage : \"\",\r\n    confirmChangePwMessage : \"\",\r\n    responseMessage : \"\",\r\n  })\r\n  const [isValidPw, setIsValidPw] = useState({\r\n    isCurrentPwValid: false,\r\n    isChangePwValid: false,\r\n    isConfirmPwValid: false,\r\n    isCanChange: false,\r\n    responseResult: true,\r\n  })\r\n\r\n\r\n\r\n  const validatePassword = (password) => {\r\n    const regex =\r\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,16}$/;\r\n    return regex.test(password);\r\n  };\r\n  const handlePasswordCurrentCheck = (text) => {\r\n    setCurrentPassword(text);\r\n    if (validatePassword(text)) {\r\n      setPwMessage((prev)=>({...prev, currentPwMessage:''}));\r\n      setIsValidPw((prev)=>({...prev, isCurrentPwValid:true}));\r\n    } else {\r\n      setPwMessage((prev)=>({...prev, currentPwMessage:'비밀번호를 다시 확인해주세요!'}));\r\n      setIsValidPw((prev)=>({...prev, isCurrentPwValid:false}));\r\n    }\r\n  };\r\n\r\n  const handlePasswordChangeCheck = (text) => {\r\n    setChangePassword(text);\r\n    if (validatePassword(text) && text != currentPassword) {\r\n      setPwMessage((prev)=>({...prev, changePwMessage:'완벽합니다.'}));\r\n      setIsValidPw((prev)=>({...prev, isChangePwValid:true}));\r\n    } else if(text === currentPassword){\r\n      setPwMessage((prev)=>({...prev, changePwMessage:'이전과 동일한 비밀번호는 사용할 수 없습니다.'}));\r\n      setIsValidPw((prev)=>({...prev, isChangePwValid:false}));\r\n    }else {\r\n      setPwMessage((prev)=>({...prev, changePwMessage:'양식을 맞춰주세요!'}));\r\n      setIsValidPw((prev)=>({...prev, isChangePwValid:false}));\r\n    }\r\n  };\r\n\r\n  const handleConfirmPasswordChangeCheck = (text) => {\r\n    setChangeConfirmPassword(text);\r\n    if ((text === changePassword) && validatePassword(text) && text != currentPassword) {\r\n      setPwMessage((prev)=>({...prev, confirmChangePwMessage:'비밀번호가 일치합니다.'}));\r\n      setIsValidPw((prev)=>({...prev, isConfirmPwValid:true}));\r\n      // setUserInfo((prev) => ({ ...prev, password: text }));\r\n    } else if(text === currentPassword){\r\n      setPwMessage((prev)=>({...prev, confirmChangePwMessage:'이전과 동일한 비밀번호는 사용할 수 없습니다.'}));\r\n      setIsValidPw((prev)=>({...prev, isConfirmPwValid:false}));\r\n    }else {\r\n      setPwMessage((prev)=>({...prev, confirmChangePwMessage:'비밀번호가 일치하지 않습니다.'}));\r\n      setIsValidPw((prev)=>({...prev, isConfirmPwValid:false}));\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // 비밀번호 변경 함수\r\n  const handleUserPasswordChange = () => {\r\n    if(isValidPw.isCanChange){\r\n      doUserPasswordChange()\r\n    }else{\r\n      switch (!isValidPw.isConfirmPwValid) {\r\n        case !isValidPw.isCurrentPwValid:\r\n          setPwMessage((prev)=>({...prev, responseMessage:\"현재 비밀번호를 확인해주세요.\"}))\r\n          currentPasswordRef.current.focus()\r\n          break;\r\n        case !isValidPw.isChangePwValid:\r\n          setPwMessage((prev)=>({...prev, responseMessage:\"변경할 비밀번호를 확인해주세요.\"}))\r\n          changePasswordRef.current.focus()\r\n          break;\r\n        // case !isValidPw.isConfirmPwValid:\r\n        //   setPwMessage((prev)=>({...prev, responseMessage:\"비밀번호 확인 부분을 확인해주세요.\"}))\r\n        //   changeConfirmPasswordRef.current.focus()\r\n        //   break;\r\n          \r\n        default:\r\n          setPwMessage((prev)=>({...prev, responseMessage:\"비밀번호 확인 부분을 확인해주세요.\"}))\r\n          changeConfirmPasswordRef.current.focus()\r\n          break;\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  const doUserPasswordChange = async () =>{\r\n    const data =   {\r\n      \"beforePassword\" : currentPassword,\r\n      \"afterPassword\" : changeConfirmPassword,\r\n    }\r\n    try{\r\n      const response = await userPasswordChange(data, accessToken, grantType)\r\n      if(response.status===200){\r\n        console.log('비밀번호 변경 성공')\r\n        setIsValidPw((prev)=>({...prev, responseResult:true}));\r\n        setPwMessage((prev)=>({...prev, responseMessage:\"비밀번호가 변경되었습니다.\"}))\r\n        Alert.alert('','비밀번호가 변경되었습니다.')\r\n        navigation.navigate(\"MyPageScreen\");\r\n      }else if(response.status===403){\r\n        setIsValidPw((prev)=>({...prev, responseResult:false}));\r\n        console.log('비밀번호 변경 실패',response.status)\r\n        console.log(response.data)\r\n        setIsValidPw((prev)=>({...prev, responseResult:false}));\r\n        setPwMessage((prev)=>({...prev, responseMessage:response.data}))\r\n      }else if(response.status===404){\r\n        console.log('비밀번호 변경 실패',response.status)\r\n        console.log(response.data)\r\n        setIsValidPw((prev)=>({...prev, responseResult:false}));\r\n        setPwMessage((prev)=>({...prev, responseMessage:response.data}))\r\n      }else{\r\n        setIsValidPw((prev)=>({...prev, responseResult:false}));\r\n        console.log('오류 발생 : 비밀번호 변경 실패',response.status)\r\n      }\r\n    }catch(error){\r\n      setIsValidPw((prev)=>({...prev, responseResult:false}));\r\n      console.log(\"오류 발생 : 비밀번호 변경 실패\", error)\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    currentPasswordRef.current.focus()\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(isValidPw.isCurrentPwValid && isValidPw.isChangePwValid && isValidPw.isConfirmPwValid){\r\n      setIsValidPw((prev) => ({...prev, isCanChange:true}))\r\n      setPwMessage((prev)=>({...prev, responseMessage:\"비밀번호 변경 가능\"}))\r\n    }else{\r\n      if(currentPassword || changePassword || changeConfirmPassword){\r\n        setPwMessage((prev)=>({...prev, responseMessage:\"비밀번호 변경 중\"}))\r\n      }\r\n      setIsValidPw((prev) => ({...prev, isCanChange:false}))\r\n    }\r\n  },[isValidPw.isCurrentPwValid, isValidPw.isChangePwValid, isValidPw.isConfirmPwValid])\r\n  return (\r\n    <View style={styles.container}>\r\n      <HeaderComponent title=\"비밀번호 변경\" navigation={navigation}/>\r\n\r\n      <View style={styles.iconContainer}>\r\n        <Image\r\n          style={styles.lockIcon}\r\n          source={require(\"../../assets/icon/lock.png\")} // 프로필 이미지 경로\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.passwordInput}>\r\n        <Text style={styles.passwordPlaceholder}>*</Text>\r\n        <Text style={styles.passwordPlaceholder}>*</Text>\r\n        <Text style={styles.passwordPlaceholder}>*</Text>\r\n        <Text style={styles.passwordPlaceholder}>*</Text>\r\n      </View>\r\n\r\n      {/* 비밀번호 안내 텍스트 */}\r\n      <View style={styles.passwordInfoContainer}>\r\n        <Text style={styles.passwordChangeInfoText}>\r\n          비밀번호를 변경해 주세요!\r\n        </Text>\r\n        <Text style={styles.passwordInfoText}>\r\n          기존의 비밀번호와 새 비밀번호를 입력해주세요.\r\n        </Text>\r\n      </View>\r\n\r\n      {/* 텍스트 입력란 */}\r\n      <TextInput\r\n        style={styles.inputBox}\r\n        placeholder=\"현재 비밀번호\"\r\n        secureTextEntry={true} // 비밀번호 숨김 처리\r\n        returnKeyType=\"next\"\r\n        ref={currentPasswordRef}\r\n        value={currentPassword}\r\n        onChangeText={(text)=>{\r\n          handlePasswordCurrentCheck(text)\r\n        }}\r\n        maxLength={16}\r\n        onSubmitEditing={()=>{\r\n          changePasswordRef.current.focus()\r\n        }}\r\n      />\r\n      <Text\r\n        style={[styles.pwMessage, {\r\n          color: (isValidPw.isCurrentPwValid) ? \"blue\" : \"red\",\r\n        }]}\r\n      >\r\n        {pwMessage.currentPwMessage}\r\n      </Text>\r\n\r\n      <TextInput\r\n        style={styles.inputBox}\r\n        placeholder=\"새 비밀번호\"\r\n        secureTextEntry={true} // 비밀번호 숨김 처리\r\n        returnKeyType=\"next\"\r\n        ref={changePasswordRef}\r\n        value={changePassword}\r\n        onChangeText={(text)=>{\r\n          handlePasswordChangeCheck(text)\r\n        }}\r\n        maxLength={16}\r\n        onSubmitEditing={()=>{\r\n          changeConfirmPasswordRef.current.focus()\r\n        }}\r\n      />\r\n      <Text\r\n        style={[styles.pwMessage, {\r\n          color: (isValidPw.isChangePwValid) ? \"blue\" : \"red\",\r\n        }]}\r\n      >\r\n        {pwMessage.changePwMessage}\r\n      </Text>\r\n\r\n      <TextInput\r\n        style={styles.inputBox}\r\n        placeholder=\"비밀번호 확인\"\r\n        secureTextEntry={true} // 비밀번호 숨김 처리\r\n        returnKeyType=\"done\"\r\n        ref={changeConfirmPasswordRef}\r\n        value={changeConfirmPassword}\r\n        onChangeText={(text)=>{\r\n          handleConfirmPasswordChangeCheck(text)\r\n        }}\r\n        maxLength={16}\r\n        onSubmitEditing={()=>{\r\n          handleUserPasswordChange()\r\n        }}\r\n      />\r\n      <Text\r\n        style={[styles.pwMessage, {\r\n          color: (isValidPw.isConfirmPwValid) ? \"blue\" : \"red\",\r\n        }]}\r\n      >\r\n        {pwMessage.confirmChangePwMessage}\r\n      </Text>\r\n      <View style={{}}>\r\n        <Text style={{\r\n          textAlign:'center',\r\n          color: (isValidPw.isCanChange && isValidPw.responseResult) ? \"blue\" : \"red\",\r\n        }}>{pwMessage.responseMessage}</Text>\r\n      </View>\r\n      \r\n\r\n      {/* 변경 완료 버튼 */}\r\n      <TouchableOpacity\r\n        style={[styles.changePasswordButton, {backgroundColor:isValidPw.isCanChange?\"#FF965C\":'grey'}]}\r\n        onPress={() => {\r\n          handleUserPasswordChange()\r\n        }}\r\n        disabled={!isValidPw.isCanChange}\r\n      >\r\n        {/* <Text style={styles.changePasswordButtonText}>변경 완료</Text> */}\r\n        <Text style={styles.changePasswordButtonText}>비밀번호 변경</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n    padding: 16,\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 16,\r\n    marginTop: 15,\r\n  },\r\n  arrowIcon: {\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  iconContainer: {\r\n    alignItems: \"center\",\r\n    marginTop: 50,\r\n  },\r\n  lockIcon: {\r\n    width: 100,\r\n    height: 100,\r\n    marginBottom: 8,\r\n  },\r\n  passwordInput: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\", // 가로 중앙 정렬\r\n    marginBottom: 16,\r\n  },\r\n  passwordPlaceholder: {\r\n    fontSize: 24,\r\n    borderBottomWidth: 1,\r\n    width: 20, // 각 * 텍스트 너비 설정\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n    marginLeft: 10, // 각 * 텍스트 사이 간격 조절\r\n    marginTop: 10,\r\n    marginBottom: 30,\r\n  },\r\n  passwordChangeText: {\r\n    fontSize: 24,\r\n    flex: 1, // 텍스트가 남은 공간을 모두 차지하도록 설정\r\n    textAlign: \"center\",\r\n  },\r\n  passwordInfoContainer: {\r\n    alignItems: \"center\",\r\n    marginBottom: 60,\r\n  },\r\n  passwordChangeInfoText: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  passwordInfoText: {\r\n    fontSize: 14,\r\n\r\n    color: \"#7B7B7B\",\r\n  },\r\n  inputBox: {\r\n    borderWidth: 1,\r\n    backgroundColor: \"#F5F3F3\",\r\n    borderColor: \"#BAC0CA\",\r\n    borderRadius: 10,\r\n    padding: 6,\r\n    // marginBottom: 16,\r\n    fontSize: 12,\r\n    paddingLeft: 12,\r\n    marginHorizontal: 20,\r\n    width: \"90%\",\r\n    alignSelf: \"center\",\r\n  },\r\n  changePasswordButton: {\r\n    backgroundColor: \"#FF965C\", // 배경색\r\n    borderRadius: 8, // BorderRadius 설정\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: 40, // 버튼 높이 조절\r\n    marginTop: 16, // 버튼을 아래로 내립니다.\r\n    width: \"90%\",\r\n    alignSelf: \"center\",\r\n    // marginTop: 130,\r\n    // marginTop: 100,\r\n  },\r\n  changePasswordButtonText: {\r\n    color: \"white\", // 텍스트 색상\r\n    fontWeight: \"bold\", // 텍스트를 bold체로 설정\r\n    fontSize: 15,\r\n  },\r\n  pwMessage:{\r\n    marginTop: 0,\r\n    marginBottom: 10,\r\n    fontSize: 12,\r\n    marginHorizontal: 20\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}