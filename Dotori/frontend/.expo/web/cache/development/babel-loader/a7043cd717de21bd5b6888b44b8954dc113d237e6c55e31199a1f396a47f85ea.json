{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport HeaderComponent from \"../Components/HeaderScreen\";\nimport { userLogin } from \"../../apis/userapi\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { inputgrantType, inputAccessToken, inputRefreshToken } from \"../../redux/slices/auth/user\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignUpCompleteScreen(_ref) {\n  var _ref2;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var grantType = useSelector(function (state) {\n    state.user.grantType;\n  });\n  var accessToken = useSelector(function (state) {\n    state.user.accessToken;\n  });\n  var refreshToken = useSelector(function (state) {\n    state.user.refreshToken;\n  });\n  var dispatch = useDispatch();\n  var _useState = useState(route.params.loginInfo),\n    _useState2 = _slicedToArray(_useState, 1),\n    loginInfo = _useState2[0];\n  var _useState3 = useState(loginInfo.userName),\n    _useState4 = _slicedToArray(_useState3, 1),\n    userName = _useState4[0];\n  var handleLogin = function handleLogin() {\n    if (loginInfo.id && loginInfo.password) {\n      doLogin();\n    } else {\n      navigation.navigate(\"LoginScreen\");\n    }\n  };\n  var doLogin = function doLogin() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      var data = {\n        id: loginInfo.id,\n        password: loginInfo.password\n      };\n      var response = yield userLogin(data);\n      if (response.status === 200) {\n        console.log('로그인 성공');\n        try {\n          dispatch(inputgrantType(response.data.grantType));\n          dispatch(inputAccessToken(response.data.accessToken));\n          dispatch(inputRefreshToken(response.data.refreshToken));\n          navigation.reset({\n            index: 0,\n            routes: [{\n              name: 'MainPageScreen'\n            }]\n          });\n        } catch (error) {\n          console.log(\"access토큰 저장 실패\");\n          navigation.navigate(\"LoginScreen\");\n        }\n      } else if (response.status === 400) {\n        console.log('로그인 실패');\n        navigation.navigate(\"LoginScreen\");\n      } else {\n        console.log('오류 발생: 로그인 실패');\n        navigation.navigate(\"LoginScreen\");\n      }\n    })).apply(this, arguments);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.innerContainer,\n      children: [_jsxs(View, {\n        style: styles.centerContainer,\n        children: [_jsx(Image, {\n          style: styles.centerImage,\n          source: require(\"../../assets/images/Hamster/SignUpHamster.png\")\n        }), _jsxs(Text, {\n          style: styles.boldText,\n          children: [userName, \"\\uB2D8\"]\n        }), _jsx(Text, {\n          style: styles.regularText,\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uC744 \\uCD95\\uD558\\uD569\\uB2C8\\uB2E4!\"\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          handleLogin();\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"\\uB3C4\\uD1A0\\uB9AC \\uC2DC\\uC791\\uD558\\uAE30\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    padding: 20,\n    backgroundColor: \"white\"\n  },\n  innerContainer: {\n    flex: 1,\n    paddingHorizontal: 20,\n    marginTop: 20\n  },\n  centerContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  centerImage: {\n    width: 200,\n    height: 200,\n    marginBottom: 40\n  },\n  boldText: {\n    fontWeight: \"bold\",\n    fontSize: 30,\n    marginBottom: 10\n  },\n  regularText: {\n    fontSize: 20\n  },\n  button: {\n    height: 40,\n    backgroundColor: \"#FF965C\",\n    marginBottom: 10,\n    borderRadius: 8,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 18\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Image","HeaderComponent","userLogin","AsyncStorage","useDispatch","useSelector","inputgrantType","inputAccessToken","inputRefreshToken","jsx","_jsx","jsxs","_jsxs","SignUpCompleteScreen","_ref","_ref2","navigation","route","grantType","state","user","accessToken","refreshToken","dispatch","_useState","params","loginInfo","_useState2","_slicedToArray","_useState3","userName","_useState4","handleLogin","id","password","doLogin","navigate","_asyncToGenerator","data","response","status","console","log","reset","index","routes","name","error","apply","arguments","style","styles","container","children","innerContainer","centerContainer","centerImage","source","require","boldText","regularText","button","onPress","buttonText","create","flex","justifyContent","padding","backgroundColor","paddingHorizontal","marginTop","alignItems","width","height","marginBottom","fontWeight","fontSize","borderRadius","color"],"sources":["C:/Users/SSAFY/Desktop/S09P22D107/Dotori/frontend/src/screens/SignUp/SignUpCompleteScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Image,\r\n} from \"react-native\";\r\n\r\nimport HeaderComponent from \"../Components/HeaderScreen\";\r\nimport {userLogin} from \"../../apis/userapi\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {inputgrantType, inputAccessToken, inputRefreshToken} from \"../../redux/slices/auth/user\"\r\n\r\nexport default function SignUpCompleteScreen({ navigation, route }) {\r\n  // 토큰\r\n  const grantType =  useSelector((state)=>{state.user.grantType})\r\n  const accessToken =  useSelector((state)=>{state.user.accessToken})\r\n  const refreshToken =  useSelector((state)=>{state.user.refreshToken})\r\n  const dispatch = useDispatch()\r\n  // 그 외\r\n  const [loginInfo] = useState(route.params.loginInfo)\r\n  // console.log(loginInfo) //loginInfo.id, loginInfo.userName, loginInfo.password\r\n  const [userName] = useState(loginInfo.userName)\r\n\r\n\r\n  const handleLogin = () => {\r\n    if(loginInfo.id && loginInfo.password){\r\n      doLogin();\r\n    }else{\r\n      navigation.navigate(\"LoginScreen\")\r\n    }\r\n  }\r\n\r\n  // const doLogin = async () => {\r\n  //   console.log(\"로그인완료\")\r\n  //   dispatch(inputgrantType(\"123\"))\r\n  //   dispatch(inputAccessToken(\"456\"))\r\n  //   dispatch(inputRefreshToken(\"789\"))\r\n  //   navigation.reset({\r\n  //     index: 0,\r\n  //     routes: [{ name: 'MainPageScreen' }],\r\n  //   });\r\n  // }\r\n\r\n  const doLogin = async () => {\r\n    const data = {id:loginInfo.id, password:loginInfo.password}\r\n    const response = await userLogin(data)\r\n    if(response.status === 200){\r\n      console.log('로그인 성공')\r\n      try{\r\n        dispatch(inputgrantType(response.data.grantType))\r\n        dispatch(inputAccessToken(response.data.accessToken))\r\n        dispatch(inputRefreshToken(response.data.refreshToken))\r\n        navigation.reset({\r\n          index: 0,\r\n          routes: [{ name: 'MainPageScreen' }],\r\n        });\r\n      }catch(error){\r\n        console.log(\"access토큰 저장 실패\")\r\n        navigation.navigate(\"LoginScreen\")\r\n      }\r\n    }else if(response.status === 400){\r\n      console.log('로그인 실패')\r\n      navigation.navigate(\"LoginScreen\")\r\n    }else{\r\n      console.log('오류 발생: 로그인 실패')\r\n      navigation.navigate(\"LoginScreen\")\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.innerContainer}>\r\n        <View style={styles.centerContainer}>\r\n          <Image\r\n            style={styles.centerImage}\r\n            source={require(\"../../assets/images/Hamster/SignUpHamster.png\")}\r\n          />\r\n          <Text style={styles.boldText}>{userName}님</Text>\r\n          <Text style={styles.regularText}>회원가입을 축하합니다!</Text>\r\n        </View>\r\n\r\n        <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={() => {\r\n            handleLogin()\r\n          }}\r\n        >\r\n          <Text style={styles.buttonText}>도토리 시작하기</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"space-between\",\r\n    padding: 20,\r\n    backgroundColor: \"white\",\r\n  },\r\n  innerContainer: {\r\n    flex: 1,\r\n    paddingHorizontal: 20,\r\n    marginTop: 20,\r\n  },\r\n  centerContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  centerImage: {\r\n    width: 200, // 이미지의 너비\r\n    height: 200, // 이미지의 높이\r\n    marginBottom: 40,\r\n  },\r\n  boldText: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 30,\r\n    marginBottom: 10,\r\n  },\r\n  regularText: {\r\n    fontSize: 20,\r\n  },\r\n\r\n  button: {\r\n    height: 40,\r\n    backgroundColor: \"#FF965C\",\r\n    marginBottom: 10,\r\n    borderRadius: 8,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 18,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}