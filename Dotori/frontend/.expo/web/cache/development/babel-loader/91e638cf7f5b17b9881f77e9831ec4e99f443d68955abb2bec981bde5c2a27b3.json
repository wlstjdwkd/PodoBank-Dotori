{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FooterScreen from \"../Components/FooterScreen\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { purposeGetList } from \"../../apis/purposeapi\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PurposeScreen(_ref) {\n  var _ref2;\n  var navigation = _ref.navigation;\n  var grantType = useSelector(function (state) {\n    return state.user.grantType;\n  });\n  var accessToken = useSelector(function (state) {\n    return state.user.accessToken;\n  });\n  var refreshToken = useSelector(function (state) {\n    return state.user.refreshToken;\n  });\n  var dispatch = useDispatch();\n  var isFocused = useIsFocused();\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentTotalSavings = _useState2[0],\n    setcurrentTotalSavings = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    purposeList = _useState4[0],\n    setPurposeList = _useState4[1];\n  var data = [{\n    id: \"1\",\n    name: \"목표1\",\n    currentAmount: 2500,\n    targetAmount: 10000\n  }, {\n    id: \"2\",\n    name: \"목표2\",\n    currentAmount: 2500,\n    targetAmount: 10000\n  }];\n  var formatNumber = function formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n  };\n  var getRandomBorderColor = function getRandomBorderColor() {\n    var colors = [\"#1DA9F8\", \"#30D71F\", \"#FF77E1\"];\n    var randomIndex = Math.floor(Math.random() * colors.length);\n    return colors[randomIndex];\n  };\n  var doPurposeGetList = function doPurposeGetList() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      try {\n        var response = yield purposeGetList(accessToken, grantType);\n        if (response.status === 200) {\n          console.log(\"목표 리스트 조회 성공\");\n          console.log(response.data);\n          setPurposeList(response.data.purposeList);\n          setcurrentTotalSavings(response.data.currentTotalSavings);\n        } else {\n          console.log(\"목표 리스트 조회 실패\", response.status);\n        }\n      } catch (error) {\n        console.log('오류 발생: 목표 리스트 조회 실패', error);\n      }\n    })).apply(this, arguments);\n  };\n  useEffect(function () {\n    if (isFocused) {\n      doPurposeGetList();\n    }\n  }, [isFocused]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      style: styles.topImage,\n      source: require(\"../../assets/images/dotori_logo.png\")\n    }), _jsxs(View, {\n      style: styles.dateAmountContainer,\n      children: [_jsx(TouchableOpacity, {\n        children: _jsx(Text, {\n          style: styles.latest,\n          children: \"\\uCD5C\\uC2E0\\uC21C\"\n        })\n      }), _jsxs(View, {\n        style: styles.colContainer,\n        children: [_jsxs(Text, {\n          style: styles.amount,\n          children: [currentTotalSavings, \"\\uC6D0\"]\n        }), _jsx(Text, {\n          style: styles.currentSavings,\n          children: \"\\uD604\\uC7AC \\uC800\\uCD95\\uC561\"\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.middleImageContainer,\n      children: _jsx(Image, {\n        style: styles.middleImage,\n        source: require(\"../../assets/images/Hamster/PurposeHamster.png\")\n      })\n    }), _jsx(View, {\n      style: styles.divider\n    }), _jsx(FlatList, {\n      style: {\n        marginBottom: 80\n      },\n      data: purposeList,\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        var borderColor = getRandomBorderColor();\n        return _jsxs(TouchableOpacity, {\n          style: [styles.targetContainer, {\n            borderColor: borderColor\n          }],\n          onPress: function onPress() {\n            navigation.navigate(\"PurposeDetailScreen\", {\n              purposeSeq: item.purposeSeq\n            });\n          },\n          children: [_jsx(Text, {\n            style: styles.targetName,\n            children: item.title\n          }), _jsx(View, {\n            style: styles.rightAlignContainer,\n            children: _jsxs(Text, {\n              style: styles.currentAmount,\n              children: [item.currentBalance.toLocaleString(), \"\\uC6D0\"]\n            })\n          }), _jsxs(View, {\n            style: styles.targetAmounts,\n            children: [_jsx(Text, {\n              style: styles.targetAmountText,\n              children: \"\\uBAA9\\uD45C \\uAE08\\uC561\"\n            }), _jsx(View, {\n              style: styles.rightAlignContainer,\n              children: _jsxs(Text, {\n                style: styles.targetAmount,\n                children: [item.goalAmount.toLocaleString(), \"\\uC6D0\"]\n              })\n            })]\n          })]\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.purposeSeq;\n      },\n      ListFooterComponent: _jsx(TouchableOpacity, {\n        style: styles.addButton,\n        onPress: function onPress() {\n          return navigation.navigate(\"PurposeCreate1Screen\");\n        },\n        children: _jsx(Text, {\n          style: styles.addText,\n          children: \"+\"\n        })\n      })\n    }), _jsx(View, {\n      style: styles.footer,\n      children: _jsx(FooterScreen, {\n        navigation: navigation\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFFFF\",\n    paddingHorizontal: 20\n  },\n  topImage: {\n    alignSelf: \"center\",\n    marginTop: 20,\n    resizeMode: \"contain\",\n    width: 70,\n    height: 70\n  },\n  dateAmountContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  latest: {\n    backgroundColor: \"#EFF3F6\",\n    borderRadius: 10,\n    fontSize: 12,\n    padding: 10\n  },\n  amount: {\n    fontSize: 20\n  },\n  currentSavings: {\n    color: \"#9D9D9D\",\n    textAlign: \"right\"\n  },\n  middleImageContainer: {\n    position: \"absolute\",\n    alignSelf: \"center\",\n    zIndex: 1,\n    top: \"20%\"\n  },\n  middleImage: {\n    width: 100,\n    height: 110\n  },\n  divider: {\n    marginTop: 115,\n    height: 10,\n    backgroundColor: \"#FFF2DE\",\n    marginBottom: 30\n  },\n  targetContainer: {\n    borderRadius: 15,\n    borderColor: \"#A6A6A6\",\n    borderWidth: 1,\n    padding: 10,\n    marginHorizontal: 15,\n    marginTop: 20,\n    flexDirection: \"column\",\n    elevation: 5,\n    backgroundColor: \"white\"\n  },\n  targetName: {\n    marginBottom: 10,\n    fontSize: 20,\n    flex: 1\n  },\n  rightAlignContainer: {\n    alignItems: \"flex-end\",\n    flex: 1\n  },\n  currentAmount: {\n    fontSize: 16,\n    marginBottom: 10\n  },\n  targetAmounts: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  targetAmountText: {\n    fontSize: 12,\n    flex: 1\n  },\n  targetAmount: {\n    fontSize: 12,\n    textAlign: \"right\",\n    flex: 1\n  },\n  addButton: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 15,\n    borderColor: \"#A6A6A6\",\n    borderWidth: 1,\n    marginHorizontal: 15,\n    height: 70,\n    marginTop: 20,\n    borderStyle: \"dashed\"\n  },\n  addText: {\n    color: \"#A6A6A6\",\n    fontSize: 24\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","Image","StyleSheet","FlatList","TouchableOpacity","FooterScreen","useDispatch","useSelector","purposeGetList","useIsFocused","jsx","_jsx","jsxs","_jsxs","PurposeScreen","_ref","_ref2","navigation","grantType","state","user","accessToken","refreshToken","dispatch","isFocused","_useState","_useState2","_slicedToArray","currentTotalSavings","setcurrentTotalSavings","_useState3","_useState4","purposeList","setPurposeList","data","id","name","currentAmount","targetAmount","formatNumber","num","toString","replace","getRandomBorderColor","colors","randomIndex","Math","floor","random","length","doPurposeGetList","_asyncToGenerator","response","status","console","log","error","apply","arguments","style","styles","container","children","topImage","source","require","dateAmountContainer","latest","colContainer","amount","currentSavings","middleImageContainer","middleImage","divider","marginBottom","renderItem","_ref3","item","borderColor","targetContainer","onPress","navigate","purposeSeq","targetName","title","rightAlignContainer","currentBalance","toLocaleString","targetAmounts","targetAmountText","goalAmount","keyExtractor","ListFooterComponent","addButton","addText","footer","create","flex","backgroundColor","paddingHorizontal","alignSelf","marginTop","resizeMode","width","height","flexDirection","justifyContent","alignItems","borderRadius","fontSize","padding","color","textAlign","position","zIndex","top","borderWidth","marginHorizontal","elevation","borderStyle"],"sources":["C:/Users/SSAFY/Desktop/S09P22D107/Dotori/frontend/src/screens/Purpose/PurposeScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Image,\r\n  StyleSheet,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from \"react-native\"\r\nimport FooterScreen from \"../Components/FooterScreen\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { purposeGetList } from \"../../apis/purposeapi\"\r\nimport { useIsFocused } from \"@react-navigation/native\"\r\n\r\nexport default function PurposeScreen({ navigation }) {\r\n  // 토큰\r\n  const grantType =  useSelector((state)=>state.user.grantType)\r\n  const accessToken =  useSelector((state)=>state.user.accessToken)\r\n  const refreshToken =  useSelector((state)=>state.user.refreshToken)\r\n  const dispatch = useDispatch()\r\n  // 그 외\r\n  const isFocused = useIsFocused()\r\n\r\n  const [currentTotalSavings, setcurrentTotalSavings] = useState(0)\r\n  const [purposeList, setPurposeList] = useState([])\r\n  \r\n  const data = [\r\n    {\r\n      id: \"1\",\r\n      name: \"목표1\",\r\n      currentAmount: 2500,\r\n      targetAmount: 10000,\r\n    },\r\n    {\r\n      id: \"2\",\r\n      name: \"목표2\",\r\n      currentAmount: 2500,\r\n      targetAmount: 10000,\r\n    },\r\n    // 다른 목표들...\r\n  ];\r\n\r\n  const formatNumber = (num) => {\r\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n  };\r\n\r\n  const getRandomBorderColor = () => {\r\n    const colors = [\"#1DA9F8\", \"#30D71F\", \"#FF77E1\"];\r\n    const randomIndex = Math.floor(Math.random() * colors.length);\r\n    return colors[randomIndex];\r\n  };\r\n\r\n  const doPurposeGetList = async () => {\r\n    try{\r\n      const response = await purposeGetList(accessToken, grantType)\r\n      if(response.status === 200){\r\n        console.log(\"목표 리스트 조회 성공\")\r\n        console.log(response.data)\r\n        setPurposeList(response.data.purposeList)\r\n        setcurrentTotalSavings(response.data.currentTotalSavings)\r\n      }else{\r\n        console.log(\"목표 리스트 조회 실패\", response.status)\r\n      }\r\n    }catch(error){\r\n      console.log('오류 발생: 목표 리스트 조회 실패',error)\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isFocused){\r\n      doPurposeGetList()\r\n    }\r\n  }, [isFocused]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* 상단 이미지 */}\r\n      <Image\r\n        style={styles.topImage}\r\n        source={require(\"../../assets/images/dotori_logo.png\")}\r\n      />\r\n\r\n      {/* 최신순 & 저축액 */}\r\n      <View style={styles.dateAmountContainer}>\r\n        <TouchableOpacity>\r\n          <Text style={styles.latest}>최신순</Text>\r\n        </TouchableOpacity>\r\n        <View style={styles.colContainer}>\r\n          <Text style={styles.amount}>{currentTotalSavings}원</Text>\r\n          <Text style={styles.currentSavings}>현재 저축액</Text>\r\n        </View>\r\n      </View>\r\n\r\n      {/* 중간 이미지 */}\r\n      <View style={styles.middleImageContainer}>\r\n        <Image\r\n          style={styles.middleImage}\r\n          source={require(\"../../assets/images/Hamster/PurposeHamster.png\")}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.divider}></View>\r\n\r\n      {/* 목표 리스트 */}\r\n      <FlatList\r\n        style={{marginBottom:80}}\r\n        data={purposeList}\r\n        renderItem={({ item }) => {\r\n          const borderColor = getRandomBorderColor();\r\n          return (\r\n            <TouchableOpacity style={[styles.targetContainer, { borderColor }]}\r\n              onPress={()=>{\r\n                navigation.navigate(\"PurposeDetailScreen\", {purposeSeq:item.purposeSeq})\r\n              }}\r\n            >\r\n              <Text style={styles.targetName}>{item.title}</Text>\r\n              <View style={styles.rightAlignContainer}>\r\n                <Text style={styles.currentAmount}>\r\n                  {item.currentBalance.toLocaleString()}원\r\n                </Text>\r\n              </View>\r\n              <View style={styles.targetAmounts}>\r\n                <Text style={styles.targetAmountText}>목표 금액</Text>\r\n                <View style={styles.rightAlignContainer}>\r\n                  <Text style={styles.targetAmount}>\r\n                    {item.goalAmount.toLocaleString()}원\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            </TouchableOpacity>\r\n          );\r\n        }}\r\n        // keyExtractor={(item) => item.purposeSeq}\r\n        keyExtractor={(item) => item.purposeSeq}\r\n        ListFooterComponent={\r\n          <TouchableOpacity\r\n            style={styles.addButton}\r\n            onPress={() => navigation.navigate(\"PurposeCreate1Screen\")}\r\n          >\r\n            <Text style={styles.addText}>+</Text>\r\n          </TouchableOpacity>\r\n        }\r\n      />\r\n      {/* 목표 리스트 */}\r\n      {/* <FlatList\r\n        data={data}\r\n        renderItem={({ item }) => {\r\n          const borderColor = getRandomBorderColor();\r\n          return (\r\n            <TouchableOpacity style={[styles.targetContainer, { borderColor }]}\r\n              onPress={()=>{\r\n                navigation.navigate(\"PurposeDetailScreen\", {itemId:item.id})\r\n              }}\r\n            >\r\n              <Text style={styles.targetName}>{item.name}</Text>\r\n              <View style={styles.rightAlignContainer}>\r\n                <Text style={styles.currentAmount}>\r\n                  {formatNumber(item.currentAmount)}원\r\n                </Text>\r\n              </View>\r\n              <View style={styles.targetAmounts}>\r\n                <Text style={styles.targetAmountText}>목표 금액</Text>\r\n                <View style={styles.rightAlignContainer}>\r\n                  <Text style={styles.targetAmount}>\r\n                    {formatNumber(item.targetAmount)}원\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            </TouchableOpacity>\r\n          );\r\n        }}\r\n        keyExtractor={(item) => item.id}\r\n        ListFooterComponent={\r\n          <TouchableOpacity\r\n            style={styles.addButton}\r\n            onPress={() => navigation.navigate(\"PurposeCreate1Screen\")}\r\n          >\r\n            <Text style={styles.addText}>+</Text>\r\n          </TouchableOpacity>\r\n        }\r\n      /> */}\r\n      <View style={styles.footer}>\r\n        <FooterScreen navigation={navigation} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#FFFFFF\",\r\n    paddingHorizontal: 20,\r\n  },\r\n  topImage: {\r\n    alignSelf: \"center\",\r\n    marginTop: 20,\r\n    resizeMode: \"contain\",\r\n    width: 70,\r\n    height: 70,\r\n  },\r\n  dateAmountContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  latest: {\r\n    // 여기에 텍스트 스타일 추가...\r\n    backgroundColor: \"#EFF3F6\",\r\n    borderRadius: 10,\r\n    fontSize: 12,\r\n    padding: 10,\r\n  },\r\n  amount: {\r\n    // 여기에 텍스트 스타일 추가...\r\n    fontSize: 20,\r\n  },\r\n  currentSavings: {\r\n    color: \"#9D9D9D\",\r\n    textAlign: \"right\",\r\n  },\r\n  middleImageContainer: {\r\n    position: \"absolute\", // Set position to absolute\r\n    alignSelf: \"center\",\r\n    zIndex: 1, // Make sure the image is on top of the divider\r\n    top: \"20%\", // Adjust this to position the image correctly over the divider\r\n  },\r\n  middleImage: {\r\n    // 여기에 이미지 스타일 추가...\r\n    width: 100,\r\n    height: 110,\r\n  },\r\n  divider: {\r\n    marginTop: 115, // Height of the middleImage divided by 2, adjust this value as needed\r\n    height: 10,\r\n    backgroundColor: \"#FFF2DE\", // or any color you'd like\r\n    marginBottom: 30, // space after the divider\r\n  },\r\n  targetContainer: {\r\n    borderRadius: 15,\r\n    borderColor: \"#A6A6A6\",\r\n    borderWidth: 1,\r\n    padding: 10,\r\n    marginHorizontal: 15,\r\n    marginTop: 20,\r\n    flexDirection: \"column\",\r\n\r\n    elevation: 5,\r\n    backgroundColor: \"white\",\r\n  },\r\n\r\n  targetName: {\r\n    marginBottom: 10,\r\n    fontSize: 20,\r\n    flex: 1,\r\n  },\r\n\r\n  rightAlignContainer: {\r\n    alignItems: \"flex-end\",\r\n    flex: 1,\r\n  },\r\n\r\n  currentAmount: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n\r\n  targetAmounts: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  targetAmountText: {\r\n    fontSize: 12,\r\n    flex: 1,\r\n  },\r\n\r\n  targetAmount: {\r\n    fontSize: 12,\r\n    textAlign: \"right\",\r\n    flex: 1,\r\n  },\r\n  addButton: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 15,\r\n    borderColor: \"#A6A6A6\",\r\n    borderWidth: 1,\r\n    marginHorizontal: 15,\r\n    height: 70,\r\n    marginTop: 20,\r\n    borderStyle: \"dashed\", // 점선 테두리 추가\r\n  },\r\n  addText: {\r\n    color: \"#A6A6A6\",\r\n    fontSize: 24,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}