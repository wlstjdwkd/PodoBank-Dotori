{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _ref, _ref2, _ref3, _ref4, _ref5;\nimport axios from 'axios';\nvar apiAddress = \"http://j9d107.p.ssafy.io:9200\";\nexport var purposeDetail = function purposeDetail(_x, _x2, _x3) {\n  return (_ref = _ref || _asyncToGenerator(function* (purposeSeq, accessToken, grantType) {\n    console.log(purposeSeq);\n    try {\n      var response = yield axios.get(apiAddress + `/api/v1/purpose/${purposeSeq}`, {\n        headers: {\n          Authorization: `${grantType} ${accessToken}`\n        }\n      });\n      console.log('목표 상세 조회 성공:', response.data);\n      return response;\n    } catch (error) {\n      console.error('목표 상세 조회 실패:', error.response.status, error.response.data);\n      var _response = error.response;\n      return _response;\n    }\n  })).apply(this, arguments);\n};\nexport var purposeQuit = function purposeQuit(_x4, _x5, _x6) {\n  return (_ref2 = _ref2 || _asyncToGenerator(function* (purposeSeq, accessToken, grantType) {\n    try {\n      var response = yield axios.patch(apiAddress + `/api/v1/purpose/terminate/${purposeSeq}`, null, {\n        headers: {\n          Authorization: `${grantType} ${accessToken}`\n        }\n      });\n      console.log('목표 중단하기 성공:', response.data);\n      return response;\n    } catch (error) {\n      console.error('목표 중단하기 실패:', error.response.status, error.response.data);\n      var _response2 = error.response;\n      return _response2;\n    }\n  })).apply(this, arguments);\n};\nexport var purposeStatusInquiry = function purposeStatusInquiry(_x7, _x8, _x9) {\n  return (_ref3 = _ref3 || _asyncToGenerator(function* (purposeSeq, accessToken, grantType) {\n    try {\n      var response = yield axios.get(apiAddress + `/api/v1/purpose/terminate/${purposeSeq}`, null, {\n        headers: {\n          Authorization: `${grantType} ${accessToken}`\n        }\n      });\n      console.log('목표 진행 현황 조회 성공:', response.data);\n      return response;\n    } catch (error) {\n      console.error('목표 진행 현황 조회 실패:', error.response.status, error.response.data);\n      var _response3 = error.response;\n      return _response3;\n    }\n  })).apply(this, arguments);\n};\nexport var purposeNewRegister = function purposeNewRegister(_x10, _x11, _x12) {\n  return (_ref4 = _ref4 || _asyncToGenerator(function* (newRegisterData, accessToken, grantType) {\n    console.log(newRegisterData);\n    try {\n      var response = yield axios.post(apiAddress + `/api/v1/purpose`, newRegisterData, {\n        headers: {\n          Authorization: `${grantType} ${accessToken}`\n        }\n      });\n      console.log('목표 등록 성공:', response.data);\n      return response;\n    } catch (error) {\n      console.error('목표 등록 실패:', error.response.status, error.response.data);\n      var _response4 = error.response;\n      return _response4;\n    }\n  })).apply(this, arguments);\n};\nexport var purposeGetList = function purposeGetList(_x13, _x14) {\n  return (_ref5 = _ref5 || _asyncToGenerator(function* (accessToken, grantType) {\n    try {\n      var response = yield axios.get(apiAddress + `/api/v1/purpose`, {\n        headers: {\n          Authorization: `${grantType} ${accessToken}`\n        }\n      });\n      console.log('전체 목표 조회 성공:', response.data);\n      return response;\n    } catch (error) {\n      console.error('전체 목표 조회 실패:', error.response.status, error.response.data);\n      var _response5 = error.response;\n      return _response5;\n    }\n  })).apply(this, arguments);\n};","map":{"version":3,"names":["axios","apiAddress","purposeDetail","_x","_x2","_x3","_ref","_asyncToGenerator","purposeSeq","accessToken","grantType","console","log","response","get","headers","Authorization","data","error","status","apply","arguments","purposeQuit","_x4","_x5","_x6","_ref2","patch","purposeStatusInquiry","_x7","_x8","_x9","_ref3","purposeNewRegister","_x10","_x11","_x12","_ref4","newRegisterData","post","purposeGetList","_x13","_x14","_ref5"],"sources":["C:/Users/SSAFY/Desktop/S09P22D107/Dotori/frontend/src/apis/purposeapi.js"],"sourcesContent":["// 목표 정보와 관련된 API들을 모아둠 purposes, \r\n\r\nimport axios from 'axios';\r\n// apiAddress는 수정 필요\r\nconst apiAddress =\"http://j9d107.p.ssafy.io:9200\"\r\n\r\n// Purpose\r\n// 목표 상세 조회\r\nexport const purposeDetail = async (purposeSeq, accessToken, grantType) => {\r\n  console.log(purposeSeq)\r\n  try {\r\n    const response = await axios.get(apiAddress+`/api/v1/purpose/${purposeSeq}`, {\r\n      headers: {\r\n        Authorization: `${grantType} ${accessToken}`,\r\n      },\r\n    });\r\n    console.log('목표 상세 조회 성공:', response.data);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('목표 상세 조회 실패:', error.response.status, error.response.data);\r\n    const response = error.response\r\n    return response\r\n    // throw error;\r\n  }\r\n};\r\n\r\n// 목표 중단하기\r\nexport const purposeQuit = async (purposeSeq, accessToken, grantType) => {\r\n  try {\r\n    const response = await axios.patch(apiAddress+`/api/v1/purpose/terminate/${purposeSeq}`, null, {\r\n      headers: {\r\n        Authorization: `${grantType} ${accessToken}`,\r\n      },\r\n    });\r\n    console.log('목표 중단하기 성공:', response.data);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('목표 중단하기 실패:', error.response.status, error.response.data);\r\n    const response = error.response\r\n    return response\r\n    // throw error;\r\n  }\r\n};\r\n\r\n// 목표 진행 현황 조회\r\nexport const purposeStatusInquiry = async (purposeSeq, accessToken, grantType) => {\r\n  try {\r\n    const response = await axios.get(apiAddress+`/api/v1/purpose/terminate/${purposeSeq}`, null, {\r\n      headers: {\r\n        Authorization: `${grantType} ${accessToken}`,\r\n      },\r\n    });\r\n    console.log('목표 진행 현황 조회 성공:', response.data);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('목표 진행 현황 조회 실패:', error.response.status, error.response.data);\r\n    const response = error.response\r\n    return response\r\n    // throw error;\r\n  }\r\n};\r\n\r\n// 목표 등록\r\n// {\r\n//   \"purposeTitle\" : {\r\n//     \"type\" : \"string\"\r\n//   },\r\n//   \"goalAmount\" : {\r\n//     \"type\" : \"number\"\r\n//   },\r\n//   \"startedAt\" : {\r\n//     \"type\" : \"string\",\r\n//     \"format\" : \"date-time\"\r\n//   },\r\n//   \"endAt\" : {\r\n//     \"type\" : \"string\",\r\n//     \"format\" : \"date-time\"\r\n//   }\r\n// }\r\nexport const purposeNewRegister = async (newRegisterData, accessToken, grantType) => {\r\n  console.log(newRegisterData)\r\n  try {\r\n    const response = await axios.post(apiAddress+`/api/v1/purpose`, newRegisterData, {\r\n      headers: {\r\n        Authorization: `${grantType} ${accessToken}`,\r\n      },\r\n    });\r\n    console.log('목표 등록 성공:', response.data);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('목표 등록 실패:', error.response.status, error.response.data);\r\n    const response = error.response\r\n    return response\r\n    // throw error;\r\n  }\r\n};\r\n\r\n// 전체 목표 조회\r\nexport const purposeGetList = async (accessToken, grantType) => {\r\n  try {\r\n    const response = await axios.get(apiAddress+`/api/v1/purpose`, {\r\n      headers: {\r\n        Authorization: `${grantType} ${accessToken}`,\r\n      },\r\n    });\r\n    console.log('전체 목표 조회 성공:', response.data);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('전체 목표 조회 실패:', error.response.status, error.response.data);\r\n    const response = error.response\r\n    return response\r\n    // throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// // Purpose\r\n// // 전체 목표 조회\r\n// export const purposeGetList = async (listData, accessToken) => {\r\n//   try {\r\n//     const response = await axios.get(apiAddress+`/v1/purpose`, listData, {\r\n//       headers: {\r\n//         Authorization: `Bearer ${accessToken}`,\r\n//       },\r\n//     });\r\n//     console.log('전체 목표 조회 성공:', response.data);\r\n//     return response;\r\n//   } catch (error) {\r\n//     console.error('전체 목표 조회 실패:', error.response.status, error.response.data);\r\n//     const response = error.response\r\n//     return response\r\n//     // throw error;\r\n//   }\r\n// };\r\n// // 목표 등록\r\n// export const purposeNewRegister = async (newRegisterData, accessToken) => {\r\n//   try {\r\n//     const response = await axios.post(apiAddress+`/v1/purpose`, newRegisterData, {\r\n//       headers: {\r\n//         Authorization: `Bearer ${accessToken}`,\r\n//       },\r\n//     });\r\n//     console.log('목표 등록 성공:', response.data);\r\n//     return response;\r\n//   } catch (error) {\r\n//     console.error('목표 등록 실패:', error.response.status, error.response.data);\r\n//     const response = error.response\r\n//     return response\r\n//     // throw error;\r\n//   }\r\n// };\r\n// // 목표 상세 조회\r\n// export const purposeDetail = async (detailData, accessToken) => {\r\n//   try {\r\n//     const response = await axios.get(apiAddress+`/v1/purpose/${detailData.purposeSeq}`, detailData, {\r\n//       headers: {\r\n//         Authorization: `Bearer ${accessToken}`,\r\n//       },\r\n//     });\r\n//     console.log('목표 상세 조회 성공:', response.data);\r\n//     return response;\r\n//   } catch (error) {\r\n//     console.error('목표 상세 조회 실패:', error.response.status, error.response.data);\r\n//     const response = error.response\r\n//     return response\r\n//     // throw error;\r\n//   }\r\n// };\r\n// // 목표 완료 후 저축하기\r\n// export const purposeEndSaving = async (endSavingData, accessToken) => {\r\n//   try {\r\n//     const response = await axios.patch(apiAddress+`/v1/purpose/saving`, endSavingData, {\r\n//       headers: {\r\n//         Authorization: `Bearer ${accessToken}`,\r\n//       },\r\n//     });\r\n//     console.log('목표 완료 후 저축하기 성공:', response.data);\r\n//     return response;\r\n//   } catch (error) {\r\n//     console.error('목표 완료 후 저축하기 실패:', error.response.status, error.response.data);\r\n//     const response = error.response\r\n//     return response\r\n//     // throw error;\r\n//   }\r\n// };\r\n// // 목표 중단하기\r\n// export const purposeQuit = async (quitData, accessToken) => {\r\n//   try {\r\n//     const response = await axios.patch(apiAddress+`/v1/purpose/terminate/${quitData.purposeSeq}`, quitData, {\r\n//       headers: {\r\n//         Authorization: `Bearer ${accessToken}`,\r\n//       },\r\n//     });\r\n//     console.log('목표 중단하기 성공:', response.data);\r\n//     return response;\r\n//   } catch (error) {\r\n//     console.error('목표 중단하기 실패:', error.response.status, error.response.data);\r\n//     const response = error.response\r\n//     return response\r\n//     // throw error;\r\n//   }\r\n// };\r\n// // 목표 달성 현황 조회\r\n// export const purposeStatusInquiry = async (statusInquiryData, accessToken) => {\r\n//   try {\r\n//     const response = await axios.get(apiAddress+`/v1/purpose/terminate/${statusInquiryData.purposeSeq}`, statusInquiryData, {\r\n//       headers: {\r\n//         Authorization: `Bearer ${accessToken}`,\r\n//       },\r\n//     });\r\n//     console.log('목표 달성 현황 조회 성공:', response.data);\r\n//     return response;\r\n//   } catch (error) {\r\n//     console.error('목표 달성 현황 조회 실패:', error.response.status, error.response.data);\r\n//     const response = error.response\r\n//     return response\r\n//     // throw error;\r\n//   }\r\n// };\r\n\r\n\r\n// // category\r\n// // 목표 전체 카테고리 목록 가져오기\r\n// export const purposeCategoryList = async (categoryListData, accessToken) => {\r\n//   try {\r\n//     const response = await axios.get(apiAddress+`/v1/category`, categoryListData, {\r\n//       headers: {\r\n//         Authorization: `Bearer ${accessToken}`,\r\n//       },\r\n//     });\r\n//     console.log('목표 전체 카테고리 목록 가져오기 성공:', response.data);\r\n//     return response;\r\n//   } catch (error) {\r\n//     console.error('목표 전체 카테고리 목록 가져오기 실패:', error.response.status, error.response.data);\r\n//     const response = error.response\r\n//     return response\r\n//     // throw error;\r\n//   }\r\n// };\r\n// // 목표 카테고리 그룹 분류\r\n// export const purposeCategoryClassify = async (categoryClassifyData, accessToken) => {\r\n//   try {\r\n//     const response = await axios.get(apiAddress+`/v1/category/classify`, categoryClassifyData, {\r\n//       headers: {\r\n//         Authorization: `Bearer ${accessToken}`,\r\n//       },\r\n//     });\r\n//     console.log('목표 카테고리 그룹 분류 성공:', response.data);\r\n//     return response;\r\n//   } catch (error) {\r\n//     console.error('목표 카테고리 그룹 분류 실패:', error.response.status, error.response.data);\r\n//     const response = error.response\r\n//     return response\r\n//     // throw error;\r\n//   }\r\n// };\r\n// // 목표 카테고리 하위 요소 가져오기\r\n// export const purposeCategoryChild = async (categoryChildData, accessToken) => {\r\n//   try {\r\n//     const response = await axios.get(apiAddress+`/v1/categoryData`, categoryChildData, {\r\n//       headers: {\r\n//         Authorization: `Bearer ${accessToken}`,\r\n//       },\r\n//     });\r\n//     console.log('목표 카테고리 하위 요소 가져오기 성공:', response.data);\r\n//     return response;\r\n//   } catch (error) {\r\n//     console.error('목표 카테고리 하위 요소 가져오기 실패:', error.response.status, error.response.data);\r\n//     const response = error.response\r\n//     return response\r\n//     // throw error;\r\n//   }\r\n// };\r\n\r\n// // CategoryGropu\r\n// // 목표 전체 카테고리 그룹 가져오기\r\n// export const purposeCategoryGroupList = async (categoryGroupListData, accessToken) => {\r\n//   try {\r\n//     const response = await axios.get(apiAddress+`/v1/categoryGroup`, categoryGroupListData, {\r\n//       headers: {\r\n//         Authorization: `Bearer ${accessToken}`,\r\n//       },\r\n//     });\r\n//     console.log('목표 전체 카테고리 그룹 가져오기 성공:', response.data);\r\n//     return response;\r\n//   } catch (error) {\r\n//     console.error('목표 전체 카테고리 그룹 가져오기 실패:', error.response.status, error.response.data);\r\n//     const response = error.response\r\n//     return response\r\n//     // throw error;\r\n//   }\r\n// };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}