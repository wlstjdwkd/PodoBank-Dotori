{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport HeaderComponent from \"../Components/HeaderScreen\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport { unclassifiedList, unClassifiedUpdate } from \"../../apis/planapi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function PlanNotClassifyScreen(_ref) {\n  var _ref2, _ref3, _samepleData2$;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var grantType = useSelector(function (state) {\n    return state.user.grantType;\n  });\n  var accessToken = useSelector(function (state) {\n    return state.user.accessToken;\n  });\n  var refreshToken = useSelector(function (state) {\n    return state.user.refreshToken;\n  });\n  var dispatch = useDispatch();\n  var isFocused = useIsFocused();\n  var planSeq = route.params.planSeq;\n  var accountName = route.params.accountName;\n  var samepleData2 = [{\n    planDetailSeq: 1,\n    categoryName: \"냥냥이 식비\",\n    paymentSeq: 2,\n    paymentName: \"냥냥밥\",\n    paymentPrice: 30000,\n    paymentDate: \"2023-08-12 16:30\"\n  }, {\n    planDetailSeq: 2,\n    categoryName: \"배달비\",\n    paymentSeq: 3,\n    paymentName: \"요기요\",\n    paymentPrice: 30030,\n    paymentDate: \"2023-08-13 15:30\"\n  }, {\n    planDetailSeq: 2,\n    categoryName: \"배달비\",\n    paymentSeq: 4,\n    paymentName: \"배달의 민족\",\n    paymentPrice: 32030,\n    paymentDate: \"2023-08-15 15:30\"\n  }];\n  var _useState = useState(samepleData2),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    categoryMapping = _useState4[0],\n    setCategoryMapping = _useState4[1];\n  var doUnClassifiedList = function doUnClassifiedList() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      try {\n        var response = yield unclassifiedList(planSeq, accessToken, grantType);\n        if (response.status === 200) {\n          setPlanInfo(response.data);\n        } else {\n          console.log(\"계획 정보 조회 실패\", response.status);\n        }\n      } catch (error) {\n        console.error(\"오류 발생 : 계획 정보 조회 실패:\", error);\n      }\n    })).apply(this, arguments);\n  };\n  var doUnClassifiedUpdate = function doUnClassifiedUpdate() {\n    return (_ref3 = _ref3 || _asyncToGenerator(function* () {\n      try {\n        var response = yield unClassifiedUpdate(data, planSeq, accessToken, grantType);\n        if (response.status === 200) {\n          setData(response.data);\n        } else {\n          console.log(\"계획 정보 조회 실패\", response.status);\n        }\n      } catch (error) {\n        console.error(\"오류 발생 : 계획 정보 조회 실패:\", error);\n      }\n    })).apply(this, arguments);\n  };\n  useEffect(function () {\n    if (isFocused) {}\n    var mapping = {};\n    samepleData2.forEach(function (item) {\n      if (!mapping[item.categoryName]) {\n        mapping[item.categoryName] = item.planDetailSeq;\n      }\n    });\n    setCategoryMapping(mapping);\n  }, [isFocused]);\n  var onCategoryChange = function onCategoryChange(paymentSeq, newCategory) {\n    var newPlanDetailSeq = categoryMapping[newCategory];\n    var newData = data.map(function (item) {\n      return item.paymentSeq === paymentSeq ? _objectSpread(_objectSpread({}, item), {}, {\n        categoryName: newCategory,\n        planDetailSeq: newPlanDetailSeq\n      }) : item;\n    });\n    setData(newData);\n    console.log(newData);\n  };\n  var uniqueCategories = useMemo(function () {\n    return _toConsumableArray(new Set(samepleData2.map(function (item) {\n      return item.categoryName;\n    })));\n  }, [samepleData2]);\n  var formatNumber = function formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n  };\n  var handleNextButton = function handleNextButton() {\n    navigation.navigate(\"PlanMainScreen\", {\n      accountSeq: planInfo.accountSeq\n    });\n  };\n  var _useState5 = useState(((_samepleData2$ = samepleData2[0]) == null ? void 0 : _samepleData2$.categoryName) || null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedCategoryName = _useState6[0],\n    setSelectedCategoryName = _useState6[1];\n  var getCategoryItems = function getCategoryItems() {\n    return data.filter(function (item) {\n      return item.categoryName === selectedCategoryName;\n    }) || [];\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(HeaderComponent, {\n      title: \"\\uBBF8\\uBD84\\uB958 \\uD56D\\uBAA9\",\n      cancelNavi: \"PlanMainScreen\",\n      navigation: navigation\n    }), _jsxs(View, {\n      style: styles.innerContainer,\n      children: [_jsx(Text, {\n        style: styles.accountName,\n        children: accountName\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        children: uniqueCategories.map(function (category) {\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setSelectedCategoryName(category);\n            },\n            style: selectedCategoryName === category ? styles.selectedGroupName : styles.groupName,\n            children: _jsx(Text, {\n              style: selectedCategoryName === category ? styles.selectedGroupText : styles.groupText,\n              children: category\n            })\n          }, category);\n        })\n      }), _jsx(View, {\n        style: styles.divider\n      }), _jsx(FlatList, {\n        data: getCategoryItems(),\n        renderItem: function renderItem(_ref4) {\n          var item = _ref4.item;\n          return _jsx(View, {\n            style: styles.itemContainer,\n            children: _jsxs(View, {\n              style: styles.itemLeftContainer,\n              children: [_jsxs(View, {\n                style: styles.transactionInfo,\n                children: [_jsx(Text, {\n                  style: styles.transactionDetail,\n                  children: item.paymentName\n                }), _jsx(CategoryBox, {\n                  item: item,\n                  onCategoryChange: onCategoryChange,\n                  uniqueCategories: uniqueCategories\n                })]\n              }), _jsxs(View, {\n                style: styles.transactionInfo,\n                children: [_jsx(Text, {\n                  style: styles.transactionAt,\n                  children: item.paymentDate\n                }), _jsxs(Text, {\n                  style: styles.amount,\n                  children: [formatNumber(item.paymentPrice), \"\\uC6D0\"]\n                })]\n              })]\n            })\n          });\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        }\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleNextButton,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"\\uC644\\uB8CC\"\n      })\n    })]\n  });\n}\nfunction CategoryBox(_ref5) {\n  var item = _ref5.item,\n    onCategoryChange = _ref5.onCategoryChange,\n    uniqueCategories = _ref5.uniqueCategories;\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    modalVisible = _useState8[0],\n    setModalVisible = _useState8[1];\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableOpacity, {\n      style: styles.categoryBox,\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(Text, {\n        style: styles.categoryText,\n        children: item.categoryName\n      })\n    }), modalVisible && _jsx(Modal, {\n      transparent: true,\n      animationType: \"slide\",\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        return setModalVisible(false);\n      },\n      children: _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: styles.modalContainer,\n          children: [_jsxs(View, {\n            style: styles.modalHeader,\n            children: [_jsx(Text, {\n              style: styles.modalHeaderText,\n              children: \"\\uCE74\\uD14C\\uACE0\\uB9AC \\uBCC0\\uACBD\"\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setModalVisible(false);\n              },\n              children: _jsx(Text, {\n                style: styles.modalCloseText,\n                children: \"X\"\n              })\n            })]\n          }), _jsx(ScrollView, {\n            contentContainerStyle: styles.modalContent,\n            children: uniqueCategories.map(function (category) {\n              return _jsx(TouchableOpacity, {\n                style: styles.modalItem,\n                onPress: function onPress() {\n                  setModalVisible(false);\n                  onCategoryChange(item.paymentSeq, category);\n                },\n                children: _jsx(Text, {\n                  style: styles.modalItemText,\n                  children: category\n                })\n              }, category);\n            })\n          })]\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  modalOverlay: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0,0,0,0.5)\"\n  },\n  modalContainer: {\n    width: \"80%\",\n    maxHeight: \"50%\",\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: 20,\n    overflow: \"hidden\"\n  },\n  modalHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  modalHeaderText: {\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  modalCloseText: {\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  modalContent: {\n    alignItems: \"center\"\n  },\n  modalItem: {\n    width: \"100%\",\n    backgroundColor: \"#727070\",\n    borderRadius: 10,\n    marginBottom: 10,\n    padding: 10\n  },\n  modalItemText: {\n    color: \"white\",\n    fontSize: 14\n  },\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    padding: 16\n  },\n  innerContainer: {},\n  accountName: {\n    fontWeight: \"bold\",\n    alignSelf: \"flex-start\",\n    fontSize: 24,\n    marginLeft: 16,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  groupName: {\n    padding: 10\n  },\n  selectedGroupName: {\n    borderBottomWidth: 5,\n    borderBottomColor: \"#FF965C\",\n    padding: 10\n  },\n  groupText: {\n    color: \"#727070\"\n  },\n  selectedGroupText: {\n    color: \"#FF965C\"\n  },\n  divider: {\n    height: 1,\n    backgroundColor: \"#F5F5F5\",\n    width: \"100%\",\n    marginVertical: 10,\n    marginBottom: 30\n  },\n  itemContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10,\n    borderColor: \"#E3E3E3\",\n    borderWidth: 1,\n    borderRadius: 15,\n    marginVertical: 5,\n    marginLeft: 20,\n    width: \"90%\",\n    elevation: 5,\n    backgroundColor: \"white\"\n  },\n  itemLeftContainer: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    marginLeft: 10,\n    marginRight: 10\n  },\n  transactionInfo: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 5\n  },\n  transactionDetail: {\n    flex: 1,\n    fontWeight: \"bold\",\n    marginBottom: 10\n  },\n  categoryBox: {\n    backgroundColor: \"#F2F5F8\",\n    borderRadius: 10,\n    padding: 5,\n    paddingTop: 6,\n    marginBottom: 3\n  },\n  transactionAt: {\n    color: \"#7D7D7D\",\n    fontSize: 12\n  },\n  amount: {\n    textAlign: \"right\",\n    fontWeight: \"bold\"\n  },\n  categoryText: {\n    fontSize: 10\n  },\n  button: {\n    height: 50,\n    backgroundColor: \"#FF965C\",\n    borderRadius: 8,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 400\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 18\n  }\n});","map":{"version":3,"names":["React","useState","useMemo","useEffect","View","Text","StyleSheet","TouchableOpacity","ScrollView","FlatList","Modal","HeaderComponent","useDispatch","useSelector","useIsFocused","unclassifiedList","unClassifiedUpdate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PlanNotClassifyScreen","_ref","_ref2","_ref3","_samepleData2$","navigation","route","grantType","state","user","accessToken","refreshToken","dispatch","isFocused","planSeq","params","accountName","samepleData2","planDetailSeq","categoryName","paymentSeq","paymentName","paymentPrice","paymentDate","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","categoryMapping","setCategoryMapping","doUnClassifiedList","_asyncToGenerator","response","status","setPlanInfo","console","log","error","apply","arguments","doUnClassifiedUpdate","mapping","forEach","item","onCategoryChange","newCategory","newPlanDetailSeq","newData","map","_objectSpread","uniqueCategories","_toConsumableArray","Set","formatNumber","num","toString","replace","handleNextButton","navigate","accountSeq","planInfo","_useState5","_useState6","selectedCategoryName","setSelectedCategoryName","getCategoryItems","filter","style","styles","container","children","title","cancelNavi","innerContainer","horizontal","showsHorizontalScrollIndicator","category","onPress","selectedGroupName","groupName","selectedGroupText","groupText","divider","renderItem","_ref4","itemContainer","itemLeftContainer","transactionInfo","transactionDetail","CategoryBox","transactionAt","amount","keyExtractor","index","button","buttonText","_ref5","_useState7","_useState8","modalVisible","setModalVisible","categoryBox","categoryText","transparent","animationType","visible","onRequestClose","modalOverlay","modalContainer","modalHeader","modalHeaderText","modalCloseText","contentContainerStyle","modalContent","modalItem","modalItemText","create","flex","justifyContent","alignItems","backgroundColor","width","maxHeight","borderRadius","padding","overflow","flexDirection","marginBottom","fontSize","fontWeight","color","alignSelf","marginLeft","marginTop","borderBottomWidth","borderBottomColor","height","marginVertical","borderColor","borderWidth","elevation","marginRight","paddingTop","textAlign"],"sources":["C:/Users/SSAFY/Desktop/S09P22D107/Dotori/frontend/src/screens/Plan/PlanNotClassifyScreen.js"],"sourcesContent":["import React, { useState, useMemo, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  FlatList,\r\n  Modal,\r\n} from \"react-native\";\r\nimport HeaderComponent from \"../Components/HeaderScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { unclassifiedList, unClassifiedUpdate } from \"../../apis/planapi\";\r\n\r\nexport default function PlanNotClassifyScreen({ navigation, route }) {\r\n  // 토큰\r\n  const grantType = useSelector((state) => state.user.grantType);\r\n  const accessToken = useSelector((state) => state.user.accessToken);\r\n  const refreshToken = useSelector((state) => state.user.refreshToken);\r\n  const dispatch = useDispatch();\r\n  const isFocused = useIsFocused();\r\n  const planSeq = route.params.planSeq;\r\n\r\n  // 그 외\r\n  const accountName = route.params.accountName;\r\n  // TODO: 서버에서 데이터를 가져와 아래 변수들을 설정하세요\r\n  const samepleData2 = [\r\n    {\r\n      planDetailSeq: 1,\r\n      categoryName: \"냥냥이 식비\",\r\n      paymentSeq: 2,\r\n      paymentName: \"냥냥밥\",\r\n      paymentPrice: 30000,\r\n      paymentDate: \"2023-08-12 16:30\",\r\n    },\r\n    {\r\n      planDetailSeq: 2,\r\n      categoryName: \"배달비\",\r\n      paymentSeq: 3,\r\n      paymentName: \"요기요\",\r\n      paymentPrice: 30030,\r\n      paymentDate: \"2023-08-13 15:30\",\r\n    },\r\n    {\r\n      planDetailSeq: 2,\r\n      categoryName: \"배달비\",\r\n      paymentSeq: 4,\r\n      paymentName: \"배달의 민족\",\r\n      paymentPrice: 32030,\r\n      paymentDate: \"2023-08-15 15:30\",\r\n    },\r\n  ];\r\n  const [data, setData] = useState(samepleData2); // 이 부분 추가\r\n\r\n  const [categoryMapping, setCategoryMapping] = useState({});\r\n\r\n  const doUnClassifiedList = async () => {\r\n    try {\r\n      const response = await unclassifiedList(planSeq, accessToken, grantType);\r\n      if (response.status === 200) {\r\n        setPlanInfo(response.data);\r\n      } else {\r\n        console.log(\"계획 정보 조회 실패\", response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"오류 발생 : 계획 정보 조회 실패:\", error);\r\n    }\r\n  };\r\n\r\n  const doUnClassifiedUpdate = async () => {\r\n    try {\r\n      const response = await unClassifiedUpdate(\r\n        data,\r\n        planSeq,\r\n        accessToken,\r\n        grantType\r\n      );\r\n      if (response.status === 200) {\r\n        setData(response.data);\r\n      } else {\r\n        console.log(\"계획 정보 조회 실패\", response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"오류 발생 : 계획 정보 조회 실패:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 서버로부터 데이터를 가져오는 코드가 들어갈 위치입니다.\r\n    // 예시로는, samepleData2를 사용합니다.\r\n    if (isFocused) {\r\n      //doUnClassifiedList();\r\n    }\r\n    const mapping = {};\r\n    samepleData2.forEach((item) => {\r\n      if (!mapping[item.categoryName]) {\r\n        mapping[item.categoryName] = item.planDetailSeq;\r\n      }\r\n    });\r\n    setCategoryMapping(mapping);\r\n  }, [isFocused]); // 이 빈 배열은 이 useEffect가 컴포넌트가 마운트될 때만 실행되게 합니다.\r\n\r\n  const onCategoryChange = (paymentSeq, newCategory) => {\r\n    const newPlanDetailSeq = categoryMapping[newCategory];\r\n\r\n    const newData = data.map((item) =>\r\n      item.paymentSeq === paymentSeq\r\n        ? {\r\n            ...item,\r\n            categoryName: newCategory,\r\n            planDetailSeq: newPlanDetailSeq,\r\n          }\r\n        : item\r\n    );\r\n    setData(newData);\r\n    console.log(newData);\r\n  };\r\n\r\n  // uniqueCategories 정의\r\n  const uniqueCategories = useMemo(() => {\r\n    return [...new Set(samepleData2.map((item) => item.categoryName))];\r\n  }, [samepleData2]);\r\n\r\n  const formatNumber = (num) =>\r\n    num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n\r\n  const handleNextButton = () => {\r\n    // doPlanNewRegister();\r\n    navigation.navigate(\"PlanMainScreen\", {\r\n      accountSeq: planInfo.accountSeq,\r\n    });\r\n  };\r\n  // 기존의 sampleData 대신 sampleData2 사용\r\n  const [selectedCategoryName, setSelectedCategoryName] = useState(\r\n    samepleData2[0]?.categoryName || null\r\n  );\r\n\r\n  // 적절한 카테고리에 해당하는 아이템들을 얻기 위한 함수 변경\r\n  const getCategoryItems = () =>\r\n    data.filter((item) => item.categoryName === selectedCategoryName) || [];\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <HeaderComponent\r\n        title=\"미분류 항목\"\r\n        cancelNavi=\"PlanMainScreen\"\r\n        navigation={navigation}\r\n      ></HeaderComponent>\r\n      <View style={styles.innerContainer}>\r\n        <Text style={styles.accountName}>{accountName}</Text>\r\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\r\n          {uniqueCategories.map((category) => (\r\n            <TouchableOpacity\r\n              key={category}\r\n              onPress={() => setSelectedCategoryName(category)}\r\n              style={\r\n                selectedCategoryName === category\r\n                  ? styles.selectedGroupName\r\n                  : styles.groupName\r\n              }\r\n            >\r\n              <Text\r\n                style={\r\n                  selectedCategoryName === category\r\n                    ? styles.selectedGroupText\r\n                    : styles.groupText\r\n                }\r\n              >\r\n                {category}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </ScrollView>\r\n        <View style={styles.divider} />\r\n        {/* // FlatList 부분 변경 */}\r\n        <FlatList\r\n          data={getCategoryItems()}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.itemContainer}>\r\n              <View style={styles.itemLeftContainer}>\r\n                <View style={styles.transactionInfo}>\r\n                  <Text style={styles.transactionDetail}>\r\n                    {item.paymentName}\r\n                  </Text>\r\n                  <CategoryBox\r\n                    item={item}\r\n                    onCategoryChange={onCategoryChange}\r\n                    uniqueCategories={uniqueCategories}\r\n                  />\r\n                </View>\r\n\r\n                <View style={styles.transactionInfo}>\r\n                  <Text style={styles.transactionAt}>{item.paymentDate}</Text>\r\n                  <Text style={styles.amount}>\r\n                    {formatNumber(item.paymentPrice)}원\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          )}\r\n          keyExtractor={(item, index) => index.toString()}\r\n        />\r\n      </View>\r\n      <TouchableOpacity style={styles.button} onPress={handleNextButton}>\r\n        <Text style={styles.buttonText}>완료</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction CategoryBox({ item, onCategoryChange, uniqueCategories }) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        style={styles.categoryBox}\r\n        onPress={() => setModalVisible(true)}\r\n      >\r\n        <Text style={styles.categoryText}>{item.categoryName}</Text>\r\n      </TouchableOpacity>\r\n\r\n      {modalVisible && (\r\n        <Modal\r\n          transparent={true}\r\n          animationType=\"slide\"\r\n          visible={modalVisible}\r\n          onRequestClose={() => setModalVisible(false)}\r\n        >\r\n          <View style={styles.modalOverlay}>\r\n            <View style={styles.modalContainer}>\r\n              <View style={styles.modalHeader}>\r\n                <Text style={styles.modalHeaderText}>카테고리 변경</Text>\r\n                <TouchableOpacity onPress={() => setModalVisible(false)}>\r\n                  <Text style={styles.modalCloseText}>X</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <ScrollView contentContainerStyle={styles.modalContent}>\r\n                {uniqueCategories.map((category) => (\r\n                  <TouchableOpacity\r\n                    key={category}\r\n                    style={styles.modalItem}\r\n                    onPress={() => {\r\n                      setModalVisible(false);\r\n                      onCategoryChange(item.paymentSeq, category);\r\n                    }}\r\n                  >\r\n                    <Text style={styles.modalItemText}>{category}</Text>\r\n                  </TouchableOpacity>\r\n                ))}\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modalOverlay: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(0,0,0,0.5)\",\r\n  },\r\n  modalContainer: {\r\n    width: \"80%\",\r\n    maxHeight: \"50%\", // 화면 중간까지 올라오게 설정\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    overflow: \"hidden\",\r\n  },\r\n  modalHeader: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  modalHeaderText: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  modalCloseText: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  modalContent: {\r\n    alignItems: \"center\",\r\n  },\r\n  modalItem: {\r\n    width: \"100%\",\r\n    backgroundColor: \"#727070\",\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n    padding: 10,\r\n  },\r\n  modalItemText: {\r\n    color: \"white\",\r\n    fontSize: 14,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    // alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    padding: 16,\r\n  },\r\n  innerContainer: {\r\n    // alignItems: \"center\",\r\n  },\r\n  accountName: {\r\n    fontWeight: \"bold\",\r\n    alignSelf: \"flex-start\",\r\n    fontSize: 24,\r\n    marginLeft: 16,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  groupName: {\r\n    padding: 10,\r\n  },\r\n\r\n  selectedGroupName: {\r\n    borderBottomWidth: 5,\r\n    borderBottomColor: \"#FF965C\",\r\n    padding: 10,\r\n  },\r\n  groupText: {\r\n    color: \"#727070\",\r\n  },\r\n  selectedGroupText: {\r\n    color: \"#FF965C\",\r\n  },\r\n  divider: {\r\n    height: 1,\r\n    backgroundColor: \"#F5F5F5\",\r\n    width: \"100%\",\r\n    marginVertical: 10,\r\n    marginBottom: 30,\r\n  },\r\n  itemContainer: {\r\n    flexDirection: \"row\",\r\n    // justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    borderColor: \"#E3E3E3\",\r\n    borderWidth: 1,\r\n    borderRadius: 15,\r\n    marginVertical: 5,\r\n    marginLeft: 20,\r\n\r\n    width: \"90%\",\r\n\r\n    elevation: 5,\r\n    backgroundColor: \"white\",\r\n  },\r\n  itemLeftContainer: {\r\n    flex: 1,\r\n    justifyContent: \"space-between\",\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n  transactionInfo: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 5,\r\n  },\r\n  transactionDetail: {\r\n    flex: 1,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n  },\r\n  categoryBox: {\r\n    backgroundColor: \"#F2F5F8\",\r\n    borderRadius: 10,\r\n    padding: 5,\r\n    // marginTop: -20,\r\n    paddingTop: 6,\r\n    marginBottom: 3,\r\n  },\r\n  transactionAt: {\r\n    color: \"#7D7D7D\",\r\n    fontSize: 12,\r\n  },\r\n  amount: {\r\n    textAlign: \"right\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  categoryText: {\r\n    fontSize: 10,\r\n  },\r\n  button: {\r\n    height: 50,\r\n    backgroundColor: \"#FF965C\",\r\n    borderRadius: 8,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 400,\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 18,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}