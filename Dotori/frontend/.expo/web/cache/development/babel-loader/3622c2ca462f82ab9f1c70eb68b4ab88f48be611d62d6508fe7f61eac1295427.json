{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { inputgrantType, inputAccessToken, inputRefreshToken } from \"../../redux/slices/auth/user\";\nimport { userLogin } from \"../../apis/userapi\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var _ref2;\n  var navigation = _ref.navigation;\n  var grantType = useSelector(function (state) {\n    return state.user.grantType;\n  });\n  var accessToken = useSelector(function (state) {\n    return state.user.accessToken;\n  });\n  var refreshToken = useSelector(function (state) {\n    return state.user.refreshToken;\n  });\n  var dispatch = useDispatch();\n  var idRef = useRef(null);\n  var passwordRef = useRef(null);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    idSave = _useState2[0],\n    setIdSave = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    emailValue = _useState4[0],\n    setEmailValue = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    passwordValue = _useState6[0],\n    setPasswordValue = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loginMessage = _useState8[0],\n    setLoginMessage = _useState8[1];\n  var handleLogin = function handleLogin() {\n    console.log(emailValue + 'and' + passwordValue);\n    if (!emailValue) {\n      setLoginMessage(\"이메일을 입력해주세요.\");\n      idRef.current.focus();\n    } else if (!passwordValue) {\n      setLoginMessage(\"비밀번호를 입력해주세요.\");\n      passwordRef.current.focus();\n    } else {\n      console.log('로그인하기');\n      doLogin();\n    }\n  };\n  var doLogin = function doLogin() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      var data = {\n        id: emailValue,\n        password: passwordValue\n      };\n      try {\n        var response = yield userLogin(data);\n        if (response.status === 200) {\n          console.log('로그인 성공');\n          dispatch(inputgrantType(response.data.grantType));\n          dispatch(inputAccessToken(response.data.accessToken));\n          dispatch(inputRefreshToken(response.data.refreshToken));\n          try {\n            if (idSave) {\n              yield AsyncStorage.setItem(\"id\", emailValue);\n              console.log(emailValue);\n            } else {\n              yield AsyncStorage.removeItem('id');\n            }\n            navigation.reset({\n              index: 0,\n              routes: [{\n                name: 'MainPageScreen'\n              }]\n            });\n          } catch (error) {\n            setLoginMessage('오류 발생: 로그인 실패');\n          }\n        } else if (response.status === 404) {\n          console.log('로그인 실패');\n          Alert.alert('로그인 실패', \"아이디와 비밀번호를 확인해주세요.\");\n          setLoginMessage(\"아이디와 비밀번호를 확인해주세요.\");\n        } else {\n          setLoginMessage('오류 발생: 로그인 실패');\n        }\n      } catch (error) {\n        console.log(error);\n        setLoginMessage('오류 발생: 로그인 실패');\n      }\n    })).apply(this, arguments);\n  };\n  useEffect(function () {\n    var _ref3;\n    dispatch(inputgrantType(null));\n    dispatch(inputAccessToken(null));\n    dispatch(inputRefreshToken(null));\n    var getExistingId = function getExistingId() {\n      return (_ref3 = _ref3 || _asyncToGenerator(function* () {\n        try {\n          var existingId = yield AsyncStorage.getItem(\"id\");\n          if (existingId) {\n            setEmailValue(existingId);\n            passwordRef.current.focus();\n            setIdSave(true);\n          } else {\n            idRef.current.focus();\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      })).apply(this, arguments);\n    };\n    getExistingId();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      style: styles.image,\n      source: require(\"../../assets/images/dotori_logo.png\")\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"\\uC774\\uBA54\\uC77C\",\n      keyboardType: \"email-address\",\n      returnKeyType: \"next\",\n      ref: idRef,\n      value: emailValue,\n      onChangeText: function onChangeText(text) {\n        setEmailValue(text);\n      },\n      onSubmitEditing: function onSubmitEditing() {\n        passwordRef.current.focus();\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      keyboardType: \"default\",\n      returnKeyType: \"done\",\n      secureTextEntry: true,\n      ref: passwordRef,\n      value: passwordValue,\n      onChangeText: function onChangeText(text) {\n        setPasswordValue(text);\n      },\n      onSubmitEditing: function onSubmitEditing() {\n        handleLogin();\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.idSave,\n      onPress: function onPress() {\n        setIdSave(!idSave);\n      },\n      children: _jsxs(View, {\n        style: styles.checkboxContainer,\n        children: [_jsx(View, {\n          style: [styles.checkbox],\n          children: idSave ? _jsx(Text, {\n            style: {\n              textAlign: 'center'\n            },\n            children: \"\\u2714\\uFE0F\"\n          }) : null\n        }), _jsx(Text, {\n          style: {\n            color: \"#878787\"\n          },\n          children: \"\\uC544\\uC774\\uB514\\uC800\\uC7A5\"\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.referenceMessage,\n      children: _jsx(Text, {\n        style: [styles.referenceMessageText],\n        children: loginMessage\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        handleLogin();\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      })\n    }), _jsxs(View, {\n      style: styles.linksContainer,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          Alert.alert('', '아이디 찾기 구현 필요');\n          navigation.navigate(\"LoginScreen\");\n        },\n        children: _jsx(Text, {\n          style: styles.linkText,\n          children: \"\\uC544\\uC774\\uB514 \\uCC3E\\uAE30\"\n        })\n      }), _jsx(Text, {\n        style: styles.linkText,\n        children: \"|\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          Alert.alert('', '비밀번호 찾기 구현 필요');\n          navigation.navigate(\"LoginScreen\");\n        },\n        children: _jsx(Text, {\n          style: styles.linkText,\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n        })\n      }), _jsx(Text, {\n        style: styles.linkText,\n        children: \"|\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"SignUp1Screen\");\n        },\n        children: _jsx(Text, {\n          style: styles.linkText,\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.divider,\n      children: _jsx(Text, {\n        style: styles.dividerText,\n        children: \"SNS \\uACC4\\uC815\\uC73C\\uB85C \\uB85C\\uADF8\\uC778\"\n      })\n    }), _jsxs(View, {\n      style: styles.oauth,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {},\n        children: _jsx(Image, {\n          style: styles.oauthImage,\n          source: require(\"../../assets/images/kakao.png\")\n        })\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(Image, {\n          style: styles.oauthImage,\n          source: require(\"../../assets/images/naver.png\")\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 45,\n    backgroundColor: \"white\"\n  },\n  image: {\n    width: 200,\n    height: 80,\n    marginBottom: 60\n  },\n  oauth: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    marginBottom: 20\n  },\n  input: {\n    width: \"100%\",\n    height: 40,\n    backgroundColor: \"#D9D9D920\",\n    borderWidth: 1,\n    borderColor: \"#BAC0CA\",\n    borderRadius: 10,\n    padding: 10,\n    marginBottom: 10\n  },\n  checkboxContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    alignSelf: \"flex-start\"\n  },\n  checkbox: {\n    width: 20,\n    height: 20,\n    borderRadius: 5,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    marginRight: 10\n  },\n  oauthImage: {\n    width: 50,\n    height: 50,\n    marginLeft: 10,\n    marginRight: 10\n  },\n  button: {\n    width: \"100%\",\n    height: 40,\n    backgroundColor: \"#FF965C\",\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  buttonText: {\n    color: \"#fff\"\n  },\n  linksContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    marginBottom: 60,\n    paddingHorizontal: 10\n  },\n  divider: {\n    width: \"100%\",\n    height: 1,\n    backgroundColor: \"#BAC0CA\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"relative\",\n    marginBottom: 30\n  },\n  dividerText: {\n    position: \"absolute\",\n    backgroundColor: \"white\",\n    paddingHorizontal: 10,\n    color: \"#858585\"\n  },\n  linkText: {\n    color: \"#858585\"\n  },\n  idSave: {\n    width: \"100%\"\n  },\n  referenceMessage: {\n    marginVertical: 10\n  },\n  referenceMessageText: {\n    color: 'red'\n  }\n});","map":{"version":3,"names":["React","useEffect","useRef","useState","View","Text","TextInput","TouchableOpacity","Image","StyleSheet","Alert","Linking","AsyncStorage","inputgrantType","inputAccessToken","inputRefreshToken","userLogin","useDispatch","useSelector","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","_ref2","navigation","grantType","state","user","accessToken","refreshToken","dispatch","idRef","passwordRef","_useState","_useState2","_slicedToArray","idSave","setIdSave","_useState3","_useState4","emailValue","setEmailValue","_useState5","_useState6","passwordValue","setPasswordValue","_useState7","_useState8","loginMessage","setLoginMessage","handleLogin","console","log","current","focus","doLogin","_asyncToGenerator","data","id","password","response","status","setItem","removeItem","reset","index","routes","name","error","alert","apply","arguments","_ref3","getExistingId","existingId","getItem","style","styles","container","children","image","source","require","input","placeholder","keyboardType","returnKeyType","ref","value","onChangeText","text","onSubmitEditing","secureTextEntry","onPress","checkboxContainer","checkbox","textAlign","color","referenceMessage","referenceMessageText","button","buttonText","linksContainer","navigate","linkText","divider","dividerText","oauth","oauthImage","create","flex","justifyContent","alignItems","padding","backgroundColor","width","height","marginBottom","flexDirection","borderWidth","borderColor","borderRadius","alignSelf","marginRight","marginLeft","paddingHorizontal","position","marginVertical"],"sources":["C:/Users/SSAFY/Desktop/S09P22D107/Dotori/frontend/src/screens/Home/LoginScreen.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Image,\r\n  StyleSheet,\r\n  Alert,\r\n  Linking,\r\n} from \"react-native\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage' // 스토리지에 저장하기 위해 사용되는 import\r\nimport {inputgrantType, inputAccessToken, inputRefreshToken} from \"../../redux/slices/auth/user\"\r\nimport {userLogin} from \"../../apis/userapi\"\r\nimport { useDispatch, useSelector } from \"react-redux\" \r\n\r\nexport default function LoginScreen({ navigation }) {\r\n  // 토큰\r\n  const grantType =  useSelector((state)=>state.user.grantType)\r\n  const accessToken =  useSelector((state)=>state.user.accessToken)\r\n  const refreshToken =  useSelector((state)=>state.user.refreshToken)\r\n  const dispatch = useDispatch()\r\n  // 그 외\r\n  const idRef = useRef(null)\r\n  const passwordRef = useRef(null)\r\n  const [idSave, setIdSave] = useState(false) // 아이디 저장여부\r\n  const [emailValue, setEmailValue] = useState(\"\")\r\n  const [passwordValue, setPasswordValue] = useState(\"\")\r\n  const [loginMessage, setLoginMessage] = useState(\"\")\r\n\r\n  const handleLogin = () => {\r\n    console.log(emailValue+'and'+passwordValue)\r\n    if (!emailValue) {\r\n      setLoginMessage(\"이메일을 입력해주세요.\");\r\n      idRef.current.focus()\r\n    } else if (!passwordValue) {\r\n      setLoginMessage(\"비밀번호를 입력해주세요.\");\r\n      passwordRef.current.focus()\r\n    } else {\r\n      console.log('로그인하기');\r\n      doLogin();\r\n    }\r\n  }\r\n\r\n  const doLogin = async () => {\r\n    const data = {id:emailValue, password:passwordValue}\r\n    try{\r\n      const response = await userLogin(data)\r\n      if(response.status === 200){\r\n        console.log('로그인 성공')\r\n        dispatch(inputgrantType(response.data.grantType))\r\n        dispatch(inputAccessToken(response.data.accessToken))\r\n        dispatch(inputRefreshToken(response.data.refreshToken))\r\n        try{\r\n          if(idSave){\r\n            await AsyncStorage.setItem(\"id\", emailValue);\r\n            console.log(emailValue)\r\n          }else{\r\n            await AsyncStorage.removeItem('id')\r\n          }\r\n          navigation.reset({\r\n            index: 0,\r\n            routes: [{ name: 'MainPageScreen' }],\r\n          });\r\n        }catch(error){\r\n          setLoginMessage('오류 발생: 로그인 실패')\r\n        }\r\n      }else if(response.status === 404){\r\n        console.log('로그인 실패')\r\n        Alert.alert('로그인 실패', \"아이디와 비밀번호를 확인해주세요.\")\r\n        setLoginMessage(\"아이디와 비밀번호를 확인해주세요.\")\r\n      }else{\r\n        setLoginMessage('오류 발생: 로그인 실패')\r\n      }\r\n    }catch(error){\r\n      console.log(error)\r\n      setLoginMessage('오류 발생: 로그인 실패')\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    dispatch(inputgrantType(null))\r\n    dispatch(inputAccessToken(null))\r\n    dispatch(inputRefreshToken(null))\r\n\r\n    const getExistingId = async () => {\r\n      try{\r\n        const existingId = await AsyncStorage.getItem(\"id\");\r\n        if(existingId){\r\n          // 데이터 발견, 해당 데이터로 무언가 수행\r\n          setEmailValue(existingId)\r\n          passwordRef.current.focus()\r\n          setIdSave(true)\r\n        }else {\r\n          // 데이터 없음\r\n          idRef.current.focus()\r\n        }\r\n      }catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    getExistingId()\r\n  }, [])\r\n\r\n  // // 카카오 로그인\r\n  // const handleKakaoLogin = () => {\r\n  //   const kakaoLoginUrl = 'https://accounts.kakao.com/login/?continue=https%3A%2F%2Fkauth.kakao.com%2Foauth%2Fauthorize%3Fresponse_type%3Dcode%26redirect_uri%3Dhttp%253A%252F%252Fj9d107.p.ssafy.io%253A9100%252Fv1%252Fkakao%252Fcallback%26through_account%3Dtrue%26client_id%3D866dc3358fdb2e42441c258a45fe9850#login';\r\n  //   Linking.openURL(kakaoLoginUrl)\r\n  //     .then((url) => {\r\n  //       console.log('URL opened:', url);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log('URL open error:', error);\r\n  //     });\r\n  // };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image\r\n        style={styles.image}\r\n        source={require(\"../../assets/images/dotori_logo.png\")}\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"이메일\" \r\n        keyboardType=\"email-address\"\r\n        returnKeyType =\"next\"\r\n        ref = {idRef}\r\n        value = {emailValue}\r\n        onChangeText={(text)=>{\r\n          setEmailValue(text)\r\n        }}\r\n        onSubmitEditing={()=>{\r\n          passwordRef.current.focus()\r\n        }}\r\n      />\r\n      <TextInput \r\n        style={styles.input} \r\n        placeholder=\"비밀번호\" \r\n        keyboardType=\"default\"\r\n        returnKeyType =\"done\"\r\n        secureTextEntry={true}\r\n        ref = {passwordRef}\r\n        value= {passwordValue}\r\n        onChangeText={(text)=>{\r\n          setPasswordValue(text)\r\n        }}\r\n        onSubmitEditing={()=>{\r\n          handleLogin()\r\n        }}\r\n      />\r\n\r\n      <TouchableOpacity\r\n        style={styles.idSave}\r\n        onPress={()=>{\r\n          setIdSave(!idSave)\r\n        }}\r\n      >\r\n        <View style={styles.checkboxContainer}>\r\n          <View style={[styles.checkbox]}>\r\n            {idSave\r\n            ?(<Text style={{textAlign:'center'}}>✔️</Text>)\r\n            :null}\r\n          </View>\r\n          {/* <View style={[styles.checkbox, {backgroundColor:idSave?'black':'white'}]}></View> */}\r\n          <Text style={{ color: \"#878787\" }}>아이디저장</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n      <View style={styles.referenceMessage}>\r\n        <Text style={[styles.referenceMessageText, ]}>{loginMessage}</Text>\r\n      </View>\r\n      <TouchableOpacity\r\n        style={styles.button}\r\n        onPress={() => {\r\n          handleLogin()\r\n        }}\r\n      >\r\n        <Text style={styles.buttonText}>로그인</Text>\r\n      </TouchableOpacity>\r\n\r\n      <View style={styles.linksContainer}>\r\n        <TouchableOpacity\r\n          onPress={()=>{\r\n            Alert.alert('', '아이디 찾기 구현 필요')\r\n            navigation.navigate(\"LoginScreen\")\r\n          }}\r\n        >\r\n          <Text style={styles.linkText}>아이디 찾기</Text>\r\n        </TouchableOpacity>\r\n\r\n        <Text style={styles.linkText}>|</Text>\r\n        <TouchableOpacity\r\n          onPress={()=>{\r\n            Alert.alert('', '비밀번호 찾기 구현 필요')\r\n            navigation.navigate(\"LoginScreen\")\r\n          }}\r\n        >\r\n          <Text style={styles.linkText}>비밀번호 찾기</Text>\r\n        </TouchableOpacity>\r\n\r\n        <Text style={styles.linkText}>|</Text>\r\n        <TouchableOpacity onPress={() => {\r\n          navigation.navigate(\"SignUp1Screen\")\r\n        }}>\r\n          <Text style={styles.linkText}>회원가입</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={styles.divider}>\r\n        <Text style={styles.dividerText}>SNS 계정으로 로그인</Text>\r\n      </View>\r\n\r\n      {/* 카카오, 네이버 로그인 버튼은 라이브러리나 직접 이미지로 구현해야 합니다. */}\r\n      <View style={styles.oauth}>\r\n        <TouchableOpacity\r\n          onPress={()=>{\r\n            // handleKakaoLogin()\r\n          }}\r\n        >\r\n          <Image\r\n            style={styles.oauthImage}\r\n            source={require(\"../../assets/images/kakao.png\")}\r\n          />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity>\r\n          <Image\r\n            style={styles.oauthImage}\r\n            source={require(\"../../assets/images/naver.png\")}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 45,\r\n    backgroundColor: \"white\",\r\n  },\r\n  image: {\r\n    width: 200,\r\n    height: 80,\r\n    marginBottom: 60,\r\n  },\r\n  oauth: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    height: 40,\r\n    backgroundColor: \"#D9D9D920\",\r\n    borderWidth: 1,\r\n    borderColor: \"#BAC0CA\",\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  },\r\n  checkboxContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"flex-start\", // 추가: 왼쪽 정렬\r\n    // marginBottom: 30,\r\n  },\r\n  checkbox: {\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: 5,\r\n    backgroundColor: \"white\",\r\n    borderWidth: 1,\r\n    marginRight: 10,\r\n  },\r\n  oauthImage: {\r\n    width: 50,\r\n    height: 50,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    height: 40,\r\n    backgroundColor: \"#FF965C\",\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n  },\r\n  linksContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\", // 수정: 양쪽 끝으로 확장\r\n    width: \"100%\",\r\n    marginBottom: 60,\r\n    paddingHorizontal: 10,\r\n  },\r\n  divider: {\r\n    width: \"100%\",\r\n    height: 1,\r\n    backgroundColor: \"#BAC0CA\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    position: \"relative\",\r\n    marginBottom: 30, // 추가: 여백\r\n  },\r\n  dividerText: {\r\n    position: \"absolute\", // 중앙에 배치하기 위해\r\n    backgroundColor: \"white\", // 배경색으로 구분선 가리기\r\n    paddingHorizontal: 10, // 좌우 패딩\r\n    color: \"#858585\",\r\n  },\r\n  linkText: {\r\n    color: \"#858585\",\r\n  },\r\n  idSave:{\r\n    width:\"100%\", \r\n    // marginBottom: 30,\r\n  },\r\n  referenceMessage:{\r\n    marginVertical: 10,\r\n  },\r\n  referenceMessageText:{\r\n    color: 'red',\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}