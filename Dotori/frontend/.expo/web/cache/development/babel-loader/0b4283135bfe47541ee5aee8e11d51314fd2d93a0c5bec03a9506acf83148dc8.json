{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport HeaderComponent from \"../Components/HeaderScreen\";\nimport { userSignup } from \"../../apis/userapi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignUp4Screen(_ref) {\n  var _ref2;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var nameInputRef = useRef(null);\n  var birthDateInputRef = useRef(null);\n  var phoneNumberInputRef = useRef(null);\n  var _useState = useState(route.params.userInfo),\n    _useState2 = _slicedToArray(_useState, 2),\n    userInfo = _useState2[0],\n    setUserInfo = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    nameMessage = _useState4[0],\n    setNameMessage = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    birthDateMessage = _useState6[0],\n    setBirthDateMessage = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    phoneNumberMessage = _useState8[0],\n    setPhoneNumberMessage = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    nameValue = _useState10[0],\n    setNameValue = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    birthDateValue = _useState12[0],\n    setbBirthDateValue = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    phoneNumberValue = _useState14[0],\n    setPhoneNumberValue = _useState14[1];\n  var _useState15 = useState({\n      isNameValid: false,\n      isBirthdateValid: false,\n      isPhoneNumberValid: false\n    }),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isValid = _useState16[0],\n    setIsValid = _useState16[1];\n  var validateName = function validateName(text) {\n    var regex = /^[A-Za-z가-힣]{2,}$/;\n    return regex.test(text);\n  };\n  var validateBirthDate = function validateBirthDate(text) {\n    var regex = /^\\d{8}$/;\n    return regex.test(text);\n  };\n  var validatePhoneNumber = function validatePhoneNumber(text) {\n    var regex = /^01\\d{9}$/;\n    return regex.test(text);\n  };\n  var handleNameChange = function handleNameChange(text) {\n    setNameValue(text);\n    if (validateName(text)) {\n      setNameMessage(\"이름 작성 완료\");\n      setIsValid(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isNameValid: true\n        });\n      });\n      setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n        userName: text\n      }));\n    } else {\n      setNameMessage(\"이름은 2글자 이상 음절로 이루어져야 합니다.\");\n      setIsValid(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isNameValid: false\n        });\n      });\n      setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n        userName: \"\"\n      }));\n    }\n  };\n  var handleBirthDateChange = function handleBirthDateChange(text) {\n    setbBirthDateValue(text);\n    if (validateBirthDate(text)) {\n      setBirthDateMessage(\"생년월일 작성 완료\");\n      setIsValid(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isBirthdateValid: true\n        });\n      });\n      setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n        birthDate: text\n      }));\n    } else {\n      setBirthDateMessage(\"8자리 숫자로 작성해야 합니다.\");\n      setIsValid(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isBirthdateValid: false\n        });\n      });\n      setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n        birthDate: \"\"\n      }));\n    }\n  };\n  var handlePhoneNumberChange = function handlePhoneNumberChange(text) {\n    setPhoneNumberValue(text);\n    if (validatePhoneNumber(text)) {\n      setPhoneNumberMessage(\"핸드폰번호 작성 완료\");\n      setIsValid(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isPhoneNumberValid: true\n        });\n      });\n      setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n        phoneNumber: text\n      }));\n    } else {\n      setPhoneNumberMessage(\"01X로 시작하는 11자리 숫자로 작성해야 합니다.\");\n      setIsValid(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isPhoneNumberValid: false\n        });\n      });\n      setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n        phoneNumber: \"\"\n      }));\n    }\n  };\n  var gotoSignUpCompleteScreen = function gotoSignUpCompleteScreen() {\n    switch (true) {\n      case !isValid.isNameValid:\n        Alert.alert('', '작성하신 이름을 다시 확인해주세요.');\n        nameInputRef.current.focus();\n        break;\n      case !isValid.isBirthdateValid:\n        Alert.alert('', '작성하신 생년월일을 다시 확인해주세요.');\n        birthDateInputRef.current.focus();\n        break;\n      case !isValid.isPhoneNumberValid:\n        Alert.alert('', '작성하신 핸드폰번호를 다시 확인해주세요.');\n        phoneNumberInputRef.current.focus();\n        break;\n      default:\n        doSignup();\n        break;\n    }\n  };\n  changeFormbirthDate = function changeFormbirthDate(birthDate) {\n    if (birthDate.length === 8) {\n      var year = birthDate.slice(0, 4);\n      var month = birthDate.slice(4, 6);\n      var day = birthDate.slice(6, 8);\n      var formattedDate = `${year}-${month}-${day}`;\n      return formattedDate;\n    } else {\n      return '유효하지 않은 날짜';\n    }\n  };\n  var doSignup = function doSignup() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      var userInfoSending = _objectSpread(_objectSpread({}, userInfo), {}, {\n        birthDate: changeFormbirthDate(userInfo.birthDate)\n      });\n      try {\n        var response = yield userSignup(userInfoSending);\n        if (response.status === 200) {\n          var loginInfo = {\n            \"userName\": userInfo.userName,\n            \"id\": userInfo.id,\n            \"password\": userInfo.password\n          };\n          navigation.reset({\n            index: 0,\n            routes: [{\n              name: 'SignUpCompleteScreen',\n              params: {\n                loginInfo: loginInfo\n              }\n            }]\n          });\n          console.log('회원가입 성공');\n        } else if (response.status === 400) {\n          console.log('회원가입 실패', response.status);\n        } else {\n          console.log('오류발생 : 회원가입 실패');\n        }\n      } catch (error) {\n        console.log('오류발생 : 회원가입 실패', error);\n      }\n    })).apply(this, arguments);\n  };\n  useEffect(function () {\n    nameInputRef.current.focus();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(HeaderComponent, {\n      title: \"\\uD68C\\uC6D0\\uAC00\\uC785(4/4)\",\n      cancelNavi: \"LoginScreen\",\n      navigation: navigation\n    }), _jsxs(View, {\n      style: styles.innerContainer,\n      children: [_jsxs(ScrollView, {\n        style: styles.header,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"\\uAC00\\uC785\\uC815\\uBCF4 \\uC785\\uB825\\uD558\\uAE30\"\n        }), _jsx(View, {\n          style: styles.rowContainer,\n          children: _jsx(Text, {\n            style: styles.subtitle,\n            children: \"\\uC774\\uB984\"\n          })\n        }), _jsx(TextInput, {\n          style: nameValue ? styles.input : [styles.input, {\n            fontSize: 12\n          }],\n          placeholder: \"\\uC608) \\uBC15\\uC0C8\\uB85C\\uC774\",\n          placeholderTextColor: \"#7B7B7B\",\n          onChangeText: handleNameChange,\n          keyboardType: \"default\",\n          returnKeyType: \"next\",\n          maxLength: 8,\n          value: nameValue,\n          ref: nameInputRef,\n          onSubmitEditing: function onSubmitEditing() {\n            birthDateInputRef.current.focus();\n          }\n        }), _jsx(Text, {\n          style: isValid.isNameValid ? styles.validMessage1 : styles.validMessage2,\n          children: nameMessage\n        }), _jsx(View, {\n          style: styles.rowContainer,\n          children: _jsx(Text, {\n            style: styles.subtitle,\n            children: \"\\uC0DD\\uB144\\uC6D4\\uC77C\"\n          })\n        }), _jsx(TextInput, {\n          style: birthDateValue ? styles.input : [styles.input, {\n            fontSize: 12\n          }],\n          onChangeText: handleBirthDateChange,\n          placeholder: \"\\uC0DD\\uB144\\uC6D4\\uC77C 8\\uC790\\uB9AC \\uC608) 19991212\",\n          placeholderTextColor: \"#7B7B7B\",\n          keyboardType: \"number-pad\",\n          maxLength: 8,\n          returnKeyType: \"next\",\n          value: birthDateValue,\n          ref: birthDateInputRef,\n          onSubmitEditing: function onSubmitEditing() {\n            phoneNumberInputRef.current.focus();\n          }\n        }), _jsx(Text, {\n          style: isValid.isBirthdateValid ? styles.validMessage1 : styles.validMessage2,\n          children: birthDateMessage\n        }), _jsx(View, {\n          style: styles.rowContainer,\n          children: _jsx(Text, {\n            style: styles.subtitle,\n            children: \"\\uD578\\uB4DC\\uD3F0\\uBC88\\uD638\"\n          })\n        }), _jsx(TextInput, {\n          style: phoneNumberValue ? styles.input : [styles.input, {\n            fontSize: 12\n          }],\n          onChangeText: handlePhoneNumberChange,\n          placeholder: \"\\uC608) 01012345678\",\n          placeholderTextColor: \"#7B7B7B\",\n          keyboardType: \"number-pad\",\n          maxLength: 11,\n          returnKeyType: \"done\",\n          value: phoneNumberValue,\n          ref: phoneNumberInputRef,\n          onFocus: function onFocus() {\n            if (!phoneNumberValue) {\n              setPhoneNumberValue(\"010\");\n            }\n          },\n          onSubmitEditing: function onSubmitEditing() {\n            gotoSignUpCompleteScreen();\n          }\n        }), _jsx(Text, {\n          style: isValid.isPhoneNumberValid ? styles.validMessage1 : styles.validMessage2,\n          children: phoneNumberMessage\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: [styles.button, {\n          backgroundColor: isValid.isNameValid && isValid.isBirthdateValid && isValid.isPhoneNumberValid ? \"#FF965C\" : 'grey'\n        }],\n        onPress: function onPress() {\n          gotoSignUpCompleteScreen();\n        },\n        disabled: !(isValid.isNameValid && isValid.isBirthdateValid && isValid.isPhoneNumberValid),\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    padding: 20,\n    backgroundColor: \"white\"\n  },\n  innerContainer: {\n    flex: 1,\n    paddingHorizontal: 20,\n    marginTop: 20\n  },\n  header: {\n    flex: 1,\n    marginTop: 90\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 40\n  },\n  subtitle: {\n    color: \"#7B7B7B\",\n    marginBottom: 10\n  },\n  input: {\n    width: \"100%\",\n    height: 40,\n    backgroundColor: \"#D9D9D920\",\n    borderWidth: 1,\n    borderColor: \"#BAC0CA\",\n    borderRadius: 10,\n    padding: 10\n  },\n  button: {\n    height: 40,\n    backgroundColor: \"#FF965C\",\n    borderRadius: 8,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 15\n  },\n  inputBehindText: {\n    color: \"#7B7B7B\",\n    marginBottom: 40,\n    fontSize: 12,\n    marginLeft: 10,\n    marginTop: -20\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  validMessage1: {\n    color: \"blue\",\n    marginBottom: 20,\n    fontSize: 12\n  },\n  validMessage2: {\n    color: \"red\",\n    fontSize: 12,\n    marginBottom: 20\n  }\n});","map":{"version":3,"names":["React","useEffect","useRef","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","ScrollView","Alert","HeaderComponent","userSignup","jsx","_jsx","jsxs","_jsxs","SignUp4Screen","_ref","_ref2","navigation","route","nameInputRef","birthDateInputRef","phoneNumberInputRef","_useState","params","userInfo","_useState2","_slicedToArray","setUserInfo","_useState3","_useState4","nameMessage","setNameMessage","_useState5","_useState6","birthDateMessage","setBirthDateMessage","_useState7","_useState8","phoneNumberMessage","setPhoneNumberMessage","_useState9","_useState10","nameValue","setNameValue","_useState11","_useState12","birthDateValue","setbBirthDateValue","_useState13","_useState14","phoneNumberValue","setPhoneNumberValue","_useState15","isNameValid","isBirthdateValid","isPhoneNumberValid","_useState16","isValid","setIsValid","validateName","text","regex","test","validateBirthDate","validatePhoneNumber","handleNameChange","prev","_objectSpread","userName","handleBirthDateChange","birthDate","handlePhoneNumberChange","phoneNumber","gotoSignUpCompleteScreen","alert","current","focus","doSignup","changeFormbirthDate","length","year","slice","month","day","formattedDate","_asyncToGenerator","userInfoSending","response","status","loginInfo","id","password","reset","index","routes","name","console","log","error","apply","arguments","style","styles","container","children","title","cancelNavi","innerContainer","header","rowContainer","subtitle","input","fontSize","placeholder","placeholderTextColor","onChangeText","keyboardType","returnKeyType","maxLength","value","ref","onSubmitEditing","validMessage1","validMessage2","onFocus","button","backgroundColor","onPress","disabled","buttonText","create","flex","justifyContent","padding","paddingHorizontal","marginTop","fontWeight","marginBottom","color","width","height","borderWidth","borderColor","borderRadius","alignItems","inputBehindText","marginLeft","flexDirection"],"sources":["C:/Users/SSAFY/Desktop/S09P22D107/Dotori/frontend/src/screens/SignUp/SignUp4Screen.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Alert,\r\n} from \"react-native\";\r\n\r\nimport HeaderComponent from \"../Components/HeaderScreen\";\r\nimport {userSignup} from \"../../apis/userapi\"\r\n\r\nexport default function SignUp4Screen({ navigation, route }) {\r\n  const nameInputRef = useRef(null); // 이름 입력란 ref\r\n  const birthDateInputRef = useRef(null); // 생년월일 입력란 ref\r\n  const phoneNumberInputRef = useRef(null); // 핸드폰번호 입력란 ref\r\n\r\n  const [userInfo, setUserInfo] = useState(route.params.userInfo);\r\n  const [nameMessage, setNameMessage] = useState(\"\");\r\n  const [birthDateMessage, setBirthDateMessage] = useState(\"\");\r\n  const [phoneNumberMessage, setPhoneNumberMessage] = useState(\"\");\r\n  // textinput value들\r\n  const [nameValue, setNameValue] = useState(\"\")\r\n  const [birthDateValue, setbBirthDateValue] = useState(\"\")\r\n  const [phoneNumberValue, setPhoneNumberValue] = useState(\"\")\r\n\r\n  const [isValid, setIsValid] = useState({\r\n    isNameValid: false,\r\n    isBirthdateValid: false,\r\n    isPhoneNumberValid: false,\r\n  }); \r\n\r\n  const validateName = (text) => {\r\n    const regex = /^[A-Za-z가-힣]{2,}$/;\r\n    return regex.test(text);\r\n  };\r\n  const validateBirthDate = (text) => {\r\n    const regex = /^\\d{8}$/;\r\n    return regex.test(text);\r\n  };\r\n  const validatePhoneNumber = (text) => {\r\n    const regex = /^01\\d{9}$/;\r\n    return regex.test(text);\r\n  };\r\n  const handleNameChange = (text) => {\r\n    setNameValue(text)\r\n    if (validateName(text)) {\r\n      setNameMessage(\"이름 작성 완료\");\r\n      setIsValid((prev) => ({ ...prev, isNameValid: true }));\r\n      setUserInfo({ ...userInfo, userName: text });\r\n    } else {\r\n      setNameMessage(\"이름은 2글자 이상 음절로 이루어져야 합니다.\");\r\n      setIsValid((prev) => ({ ...prev, isNameValid: false }));\r\n      setUserInfo({ ...userInfo, userName: \"\" });\r\n    }\r\n  };\r\n  const handleBirthDateChange = (text) => {\r\n    setbBirthDateValue(text)\r\n    if (validateBirthDate(text)) {\r\n      setBirthDateMessage(\"생년월일 작성 완료\");\r\n      setIsValid((prev) => ({ ...prev, isBirthdateValid: true }));\r\n      setUserInfo({ ...userInfo, birthDate: text });\r\n    } else {\r\n      setBirthDateMessage(\"8자리 숫자로 작성해야 합니다.\");\r\n      setIsValid((prev) => ({ ...prev, isBirthdateValid: false }));\r\n      setUserInfo({ ...userInfo, birthDate: \"\" });\r\n    }\r\n  };\r\n  const handlePhoneNumberChange = (text) => {\r\n    setPhoneNumberValue(text)\r\n    if (validatePhoneNumber(text)) {\r\n      setPhoneNumberMessage(\"핸드폰번호 작성 완료\");\r\n      setIsValid((prev) => ({ ...prev, isPhoneNumberValid: true }));\r\n      setUserInfo({ ...userInfo, phoneNumber: text });\r\n    } else {\r\n      setPhoneNumberMessage(\"01X로 시작하는 11자리 숫자로 작성해야 합니다.\");\r\n      setIsValid((prev) => ({ ...prev, isPhoneNumberValid: false }));\r\n      setUserInfo({ ...userInfo, phoneNumber: \"\" });\r\n    }\r\n  };\r\n  \r\n  const gotoSignUpCompleteScreen = () =>{\r\n    switch (true) {\r\n      case !isValid.isNameValid:\r\n        // console.log(isValid)\r\n        Alert.alert('','작성하신 이름을 다시 확인해주세요.')\r\n        nameInputRef.current.focus()\r\n        break;\r\n      case !isValid.isBirthdateValid:\r\n        // console.log(isValid)\r\n        Alert.alert('','작성하신 생년월일을 다시 확인해주세요.')\r\n        birthDateInputRef.current.focus()\r\n        break;\r\n      case !isValid.isPhoneNumberValid:\r\n        // console.log(isValid)\r\n        Alert.alert('','작성하신 핸드폰번호를 다시 확인해주세요.')\r\n        phoneNumberInputRef.current.focus()\r\n        break;\r\n      default:\r\n        doSignup()\r\n        \r\n        // navigation.navigate(\"SignUpCompleteScreen\", { userName: userInfo.userName })\r\n        break;\r\n    }\r\n  }\r\n\r\n  // const doSignup = async () =>{\r\n  //   Alert.alert('',\"axios됬다하고\")\r\n  //   console.log(userInfo)\r\n  //   const loginInfo = {\r\n  //     \"userName\": userInfo.userName, \"id\":userInfo.id, \"password\":userInfo.password\r\n  //   }\r\n  //   navigation.reset({\r\n  //     index: 0,\r\n  //     routes: [{ name: 'SignUpCompleteScreen', params:{loginInfo} }],\r\n  //   });\r\n  // }\r\n\r\n  changeFormbirthDate = (birthDate) => {\r\n    if (birthDate.length === 8) {\r\n      const year = birthDate.slice(0, 4);\r\n      const month = birthDate.slice(4, 6);\r\n      const day = birthDate.slice(6, 8);\r\n      const formattedDate = `${year}-${month}-${day}`;\r\n      return formattedDate;\r\n    } else {\r\n      // 유효하지 않은 입력인 경우 또는 길이가 8이 아닌 경우에 대한 처리\r\n      return '유효하지 않은 날짜';\r\n    }\r\n  }\r\n\r\n\r\n  const doSignup = async () =>{\r\n    // console.log(userInfo)\r\n    // changeFormbirthDate(userInfo.birthDate)\r\n    const userInfoSending = {...userInfo, birthDate:changeFormbirthDate(userInfo.birthDate)}\r\n    try{\r\n      const response = await userSignup(userInfoSending)\r\n      if(response.status === 200){\r\n        const loginInfo = {\r\n          \"userName\": userInfo.userName, \"id\":userInfo.id, \"password\":userInfo.password\r\n        }\r\n        navigation.reset({\r\n          index: 0,\r\n          routes: [{ name: 'SignUpCompleteScreen', params:{loginInfo} }],\r\n        });\r\n        console.log('회원가입 성공')\r\n      }else if(response.status === 400){\r\n        console.log('회원가입 실패', response.status)\r\n      }else{\r\n        console.log('오류발생 : 회원가입 실패')\r\n      }\r\n    }catch(error){\r\n      console.log('오류발생 : 회원가입 실패',error)\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    nameInputRef.current.focus()\r\n  },[])\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <HeaderComponent\r\n        title=\"회원가입(4/4)\"\r\n        cancelNavi=\"LoginScreen\"\r\n        navigation={navigation}\r\n      ></HeaderComponent>\r\n      <View style={styles.innerContainer}>\r\n        <ScrollView style={styles.header}>\r\n          <Text style={styles.title}>가입정보 입력하기</Text>\r\n          <View style={styles.rowContainer}>\r\n            <Text style={styles.subtitle}>이름</Text>\r\n            {/* <Text\r\n              style={{\r\n                color: isValid.isNameValid ? \"blue\" : \"red\",\r\n                fontSize : 12,\r\n              }}\r\n            >\r\n              {nameMessage}\r\n            </Text> */}\r\n          </View>\r\n\r\n          <TextInput\r\n            style={nameValue ?styles.input:[styles.input,{fontSize:12}]}\r\n            placeholder=\"예) 박새로이\" // 색깔 및 크기 조정\r\n            placeholderTextColor=\"#7B7B7B\"\r\n            onChangeText={handleNameChange}\r\n            // multiline={true}\r\n            keyboardType=\"default\"\r\n            returnKeyType =\"next\"\r\n            maxLength={8}\r\n            value={nameValue}\r\n            ref={nameInputRef}\r\n            onSubmitEditing={()=>{\r\n              // if(isValid.isNameValid){\r\n              //   birthDateInputRef.current.focus()\r\n              // }\r\n              birthDateInputRef.current.focus()\r\n            }}\r\n          />\r\n          <Text\r\n            style={ isValid.isNameValid ? styles.validMessage1 : styles.validMessage2}\r\n          >\r\n            {nameMessage}\r\n          </Text>\r\n\r\n          <View style={styles.rowContainer}>\r\n            <Text style={styles.subtitle}>생년월일</Text>\r\n            {/* <Text\r\n              style={{\r\n                color: isValid.isBirthdateValid ? \"blue\" : \"red\",\r\n                fontSize : 12,\r\n                //   marginLeft: 150,'\r\n              }}\r\n            >\r\n              {birthDateMessage}\r\n            </Text> */}\r\n          </View>\r\n\r\n          <TextInput\r\n            style={birthDateValue ?styles.input:[styles.input,{fontSize:12}]}\r\n            // style={styles.input}\r\n            onChangeText={handleBirthDateChange}\r\n            // multiline={true}\r\n            placeholder=\"생년월일 8자리 예) 19991212\" // 색깔 및 크기 조정\r\n            placeholderTextColor=\"#7B7B7B\"\r\n            keyboardType=\"number-pad\"\r\n            maxLength={8}\r\n            returnKeyType =\"next\"\r\n            value = {birthDateValue}\r\n            ref={birthDateInputRef}\r\n            onSubmitEditing={()=>{\r\n              // if(isValid.isBirthdateValid){\r\n              //   phoneNumberInputRef.current.focus()\r\n              // }\r\n              phoneNumberInputRef.current.focus()\r\n            }}\r\n          />\r\n          <Text\r\n            style={ isValid.isBirthdateValid ? styles.validMessage1 : styles.validMessage2}\r\n          >\r\n            {birthDateMessage}\r\n          </Text>\r\n\r\n          {/* <Text style={styles.inputBehindText}>\r\n            생년월일 8자리 예) 19991212\r\n          </Text> */}\r\n\r\n          <View style={styles.rowContainer}>\r\n            <Text style={styles.subtitle}>핸드폰번호</Text>\r\n            {/* <Text\r\n              style={{\r\n                color: isValid.isPhoneNumberValid ? \"blue\" : \"red\",\r\n                fontSize : 12,\r\n                //   marginLeft: 0,\r\n              }}\r\n            >\r\n              {phoneNumberMessage}\r\n            </Text> */}\r\n          </View>\r\n\r\n          <TextInput\r\n            style={phoneNumberValue ?styles.input:[styles.input,{fontSize:12}]}\r\n            // style={styles.input}\r\n            onChangeText={handlePhoneNumberChange}\r\n            // multiline={true}\r\n            placeholder=\"예) 01012345678\" // 색깔 및 크기 조정\r\n            placeholderTextColor=\"#7B7B7B\"\r\n            keyboardType=\"number-pad\"\r\n            maxLength={11}\r\n            returnKeyType =\"done\"\r\n            value = {phoneNumberValue}\r\n            ref={phoneNumberInputRef}\r\n            onFocus={()=>{\r\n              if(!phoneNumberValue){\r\n                setPhoneNumberValue(\"010\")\r\n              }\r\n            }}\r\n            onSubmitEditing={()=>{\r\n              gotoSignUpCompleteScreen()\r\n            }}\r\n          />\r\n          <Text\r\n            style={ isValid.isPhoneNumberValid ? styles.validMessage1 : styles.validMessage2}\r\n          >\r\n            {phoneNumberMessage}\r\n          </Text>\r\n        </ScrollView>\r\n        \r\n        <TouchableOpacity\r\n          style={[styles.button,{backgroundColor:(isValid.isNameValid && isValid.isBirthdateValid && isValid.isPhoneNumberValid)?\"#FF965C\":'grey'}]}\r\n          onPress={() =>{\r\n            gotoSignUpCompleteScreen()\r\n          }}\r\n          disabled={!(isValid.isNameValid && isValid.isBirthdateValid && isValid.isPhoneNumberValid)}\r\n        >\r\n          <Text style={styles.buttonText}>회원가입</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"space-between\",\r\n    padding: 20,\r\n    backgroundColor: \"white\",\r\n  },\r\n  innerContainer: {\r\n    flex: 1,\r\n    paddingHorizontal: 20,\r\n    marginTop: 20,\r\n  },\r\n  header: {\r\n    flex: 1,\r\n    // justifyContent: \"center\",\r\n    // alignItems: \"center\",\r\n    marginTop: 90,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 40,\r\n  },\r\n  subtitle: {\r\n    color: \"#7B7B7B\",\r\n    marginBottom: 10,\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    height: 40,\r\n    backgroundColor: \"#D9D9D920\",\r\n    borderWidth: 1,\r\n    borderColor: \"#BAC0CA\",\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    // marginBottom: 20,\r\n    // textAlign: \"center\",\r\n  },\r\n  button: {\r\n    height: 40,\r\n    backgroundColor: \"#FF965C\",\r\n    borderRadius: 8,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 15,\r\n  },\r\n  inputBehindText: {\r\n    color: \"#7B7B7B\",\r\n    marginBottom: 40,\r\n    fontSize: 12,\r\n    marginLeft: 10,\r\n    marginTop: -20,\r\n  },\r\n  rowContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  validMessage1:{\r\n    color: \"blue\",\r\n    marginBottom: 20,\r\n    fontSize: 12,\r\n  },\r\n  validMessage2:{\r\n    color: \"red\",\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}