{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FooterScreen from \"../Components/FooterScreen\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport { planInProgress } from \"../../apis/planapi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction ProgressBar(_ref) {\n  var current = _ref.current,\n    target = _ref.target;\n  var progress = current / target * 100;\n  var displayedProgress = Math.floor(progress);\n  var progressBarColor;\n  if (displayedProgress >= 50) {\n    progressBarColor = \"#5F9DF7\";\n  } else if (displayedProgress >= 20) {\n    progressBarColor = \"#89D770\";\n  } else if (displayedProgress >= 0) {\n    progressBarColor = \"#FEDE16\";\n  } else {\n    progressBarColor = \"#ED4343\";\n  }\n  var absoluteProgress = Math.abs(displayedProgress);\n  return _jsx(View, {\n    style: styles.progressBarContainer,\n    children: _jsx(View, {\n      style: {\n        position: \"absolute\",\n        left: displayedProgress < 0 ? `${100 - absoluteProgress}%` : 0,\n        height: 17,\n        borderRadius: 8.5,\n        width: `${absoluteProgress}%`,\n        backgroundColor: progressBarColor\n      }\n    })\n  });\n}\nexport default function PlanMainScreen(_ref2) {\n  var _ref3;\n  var navigation = _ref2.navigation,\n    route = _ref2.route;\n  var grantType = useSelector(function (state) {\n    return state.user.grantType;\n  });\n  var accessToken = useSelector(function (state) {\n    return state.user.accessToken;\n  });\n  var refreshToken = useSelector(function (state) {\n    return state.user.refreshToken;\n  });\n  var dispatch = useDispatch();\n  var isFocused = useIsFocused();\n  var accountName = route.params.accountTitle;\n  var accountSeq = route.params.accountSeq;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    planInfo = _useState2[0],\n    setPlanInfo = _useState2[1];\n  var formatNumber = function formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n  };\n  var doPlanInquiry = function doPlanInquiry() {\n    return (_ref3 = _ref3 || _asyncToGenerator(function* () {\n      try {\n        var response = yield planInProgress(accountSeq, accessToken, grantType);\n        if (response.status === 200) {\n          setPlanInfo(response.data);\n          if (response.data.state === \"INACTIVE\" && terminatedAt) {\n            navigation.navigate(\"SavingPlanCompleteRecipeScreen\", {\n              accountName: accountName,\n              accountSeq: accountSeq,\n              planSeq: response.data.planSeq\n            });\n          }\n        } else {\n          console.log(\"계획 정보 조회 실패\", response.status);\n        }\n      } catch (error) {\n        console.error(\"오류 발생 : 계획 정보 조회 실패:\", error);\n      }\n    })).apply(this, arguments);\n  };\n  var renderPlans = function renderPlans() {\n    if (!planInfo) return _jsx(Text, {\n      children: \"Loading...\"\n    });\n    if (planInfo.activePlanList === null) return renderNoPlan();\n    if (planInfo.activePlanList.length > 0) return renderActivePlans();\n    return null;\n  };\n  useEffect(function () {\n    if (isFocused) {\n      doPlanInquiry();\n    }\n  }, [isFocused]);\n  var currentDate = new Date();\n  var formatDate = function formatDate(dateTimeStr) {\n    if (!dateTimeStr) return \"\";\n    var _dateTimeStr$split = dateTimeStr.split(\"T\"),\n      _dateTimeStr$split2 = _slicedToArray(_dateTimeStr$split, 1),\n      dateOnly = _dateTimeStr$split2[0];\n    return dateOnly;\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.accountName,\n      children: accountName\n    }), _jsx(Text, {\n      style: styles.accountMoney,\n      children: planInfo ? formatNumber(planInfo.accountBalance) + \"원\" : \"Loading...\"\n    }), _jsx(View, {\n      style: styles.divider\n    }), planInfo && planInfo.state === \"READY\" && _jsxs(View, {\n      style: styles.overlay,\n      children: [_jsx(Image, {\n        style: styles.overlayImage,\n        source: require(\"../../assets/images/Hamster/OverlayHamster.png\")\n      }), _jsx(Text, {\n        style: styles.overlayText,\n        children: \"\\uACC4\\uD68D\\uC740\"\n      }), _jsxs(Text, {\n        style: styles.overlayText,\n        children: [formatDate(planInfo.startedAt), \" \\uC5D0\"]\n      }), _jsx(Text, {\n        style: styles.overlayText,\n        children: \"\\uC2DC\\uC791\\uD569\\uB2C8\\uB2E4\\uC694\"\n      })]\n    }), planInfo && planInfo.activePlanList === null ? _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        style: styles.boldMessage,\n        children: \"\\uC0C8\\uB85C\\uC6B4 \\uACC4\\uD68D\\uC744 \\uC0DD\\uC131\\uD558\\uC138\\uC694.\"\n      }), _jsx(Text, {\n        style: styles.message,\n        children: \"\\uB2F9\\uC2E0\\uC758 \\uC0C8\\uB85C\\uC6B4 \\uACC4\\uD68D\\uC740 \\uBB34\\uC5C7\\uC778\\uAC00\\uC694?\"\n      }), _jsx(Image, {\n        style: styles.image,\n        source: require(\"../../assets/images/Hamster/PlanMainHamster.png\")\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          navigation.navigate(\"PlanCreate1Screen\", {\n            accountSeq: accountSeq\n          });\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"\\uACC4\\uD68D \\uC0DD\\uC131\\uD558\\uAE30\"\n        })\n      })]\n    }) : planInfo && planInfo.activePlanList && planInfo.activePlanList.length > 0 ? _jsx(_Fragment, {\n      children: _jsxs(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        style: styles.planContainer,\n        children: [_jsxs(View, {\n          style: styles.headerContainer,\n          children: [_jsxs(Text, {\n            style: styles.endDate,\n            children: [formatDate(planInfo.endAt), \" \\uC885\\uB8CC \\uC608\\uC815\"]\n          }), _jsxs(TouchableOpacity, {\n            style: styles.mailIconWrapper,\n            onPress: function onPress() {\n              navigation.navigate(\"PlanNotClassifyScreen\", {\n                accountName: accountName,\n                planSeq: planInfo.planSeq\n              });\n            },\n            children: [_jsx(Image, {\n              style: styles.mailImage,\n              source: require(\"../../assets/images/mail-icon.png\")\n            }), planInfo.unclassified > 0 && _jsx(View, {\n              style: styles.notificationBubble,\n              children: _jsx(Text, {\n                style: styles.notificationText,\n                children: planInfo.unclassified\n              })\n            })]\n          }), _jsx(TouchableOpacity, {\n            style: styles.categoryGroupButton,\n            children: _jsx(Text, {\n              children: \"\\uCE74\\uD14C\\uACE0\\uB9AC \\uADF8\\uB8F9\"\n            })\n          })]\n        }), planInfo.activePlanList.map(function (category, index) {\n          var percentage = Math.floor(category.currentBalance / category.goalAmount * 100);\n          var textColor;\n          if (percentage >= 50) {\n            textColor = \"#5F9DF7\";\n          } else if (percentage >= 20) {\n            textColor = \"#89D770\";\n          } else if (percentage >= 0) {\n            textColor = \"#FEDE16\";\n          } else {\n            textColor = \"#ED4343\";\n          }\n          return _jsxs(TouchableOpacity, {\n            style: styles.categoryBox,\n            onPress: function onPress() {\n              navigation.navigate(\"PlanCategoryScreen\");\n            },\n            children: [_jsxs(View, {\n              style: styles.categoryTop,\n              children: [_jsx(Text, {\n                style: styles.categoryName,\n                children: category.title\n              }), _jsxs(Text, {\n                style: styles.currentMoney,\n                children: [formatNumber(category.currentBalance), \"\\uC6D0\"]\n              })]\n            }), _jsx(Text, {\n              style: styles.categoryGroupName,\n              children: category.groupTitle\n            }), _jsxs(View, {\n              style: styles.rowContainer,\n              children: [_jsx(ProgressBar, {\n                current: category.currentBalance,\n                target: category.goalAmount\n              }), _jsxs(Text, {\n                style: [styles.percentageText, {\n                  color: textColor\n                }],\n                children: [percentage, \"%\"]\n              })]\n            })]\n          }, index);\n        })]\n      })\n    }) : null, _jsx(View, {\n      style: styles.footer,\n      children: _jsx(FooterScreen, {\n        navigation: navigation\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    padding: 16\n  },\n  planContainer: {\n    width: \"90%\",\n    marginBottom: 80\n  },\n  rowContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  divider: {\n    width: \"100%\",\n    height: 1,\n    backgroundColor: \"#d1d1d1\",\n    borderBottomLeftRadius: 25,\n    borderBottomRightRadius: 25,\n    marginBottom: 30,\n    marginTop: -30\n  },\n  accountName: {\n    fontSize: 18,\n    marginBottom: 8,\n    marginTop: 100\n  },\n  accountMoney: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    marginBottom: 100\n  },\n  boldMessage: {\n    fontSize: 22,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginBottom: 8\n  },\n  message: {\n    fontSize: 15,\n    textAlign: \"center\",\n    marginBottom: 20\n  },\n  image: {\n    width: 180,\n    height: 200,\n    marginBottom: 40,\n    marginTop: 40\n  },\n  mailIconWrapper: {\n    position: \"relative\",\n    width: 40,\n    height: 40\n  },\n  mailImage: {\n    width: 40,\n    height: 40\n  },\n  notificationBubble: {\n    position: \"absolute\",\n    right: -5,\n    top: 0,\n    backgroundColor: \"red\",\n    borderRadius: 10,\n    width: 20,\n    height: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  notificationText: {\n    color: \"white\",\n    fontSize: 12,\n    fontWeight: \"bold\"\n  },\n  button: {\n    backgroundColor: \"#FF965C\",\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n    width: \"100%\"\n  },\n  buttonText: {\n    fontSize: 18,\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  footer: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginBottom: -20\n  },\n  headerContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    marginBottom: 20\n  },\n  endDate: {\n    color: \"#777777\"\n  },\n  categoryGroupButton: {\n    backgroundColor: \"#F2F5F8\",\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 5\n  },\n  categoryBox: {\n    borderRadius: 15,\n    borderWidth: 1,\n    borderColor: \"#d1d1d1\",\n    padding: 16,\n    width: \"100%\",\n    marginBottom: 10,\n    elevation: 5,\n    backgroundColor: \"white\",\n    marginBottom: 20\n  },\n  categoryTop: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  categoryName: {\n    color: \"#858585\",\n    fontWeight: \"bold\",\n    fontSize: 18\n  },\n  currentMoney: {\n    color: \"#858585\",\n    fontWeight: \"bold\",\n    fontSize: 18\n  },\n  categoryGroupName: {\n    color: \"#7B7B7B\",\n    fontSize: 12\n  },\n  progressBarContainer: {\n    height: 17,\n    borderRadius: 8.5,\n    backgroundColor: \"#d1d1d1\",\n    marginTop: 30,\n    flexDirection: \"row\",\n    width: \"85%\"\n  },\n  progressBar: {\n    height: 17,\n    borderRadius: 8.5,\n    backgroundColor: \"blue\"\n  },\n  progressBarText: {\n    position: \"absolute\",\n    right: 5,\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  percentageText: {\n    textAlign: \"right\",\n    fontSize: 15,\n    marginTop: 27\n  },\n  overlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: \"rgba(255,255,255,0.8)\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    zIndex: 1000\n  }),\n  overlayImage: {\n    height: 200,\n    width: 200\n  },\n  overlayText: {\n    fontSize: 25,\n    marginTop: 10\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","Image","StyleSheet","TouchableOpacity","ScrollView","FooterScreen","useDispatch","useSelector","useIsFocused","planInProgress","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProgressBar","_ref","current","target","progress","displayedProgress","Math","floor","progressBarColor","absoluteProgress","abs","style","styles","progressBarContainer","children","position","left","height","borderRadius","width","backgroundColor","PlanMainScreen","_ref2","_ref3","navigation","route","grantType","state","user","accessToken","refreshToken","dispatch","isFocused","accountName","params","accountTitle","accountSeq","_useState","_useState2","_slicedToArray","planInfo","setPlanInfo","formatNumber","num","toString","replace","doPlanInquiry","_asyncToGenerator","response","status","data","terminatedAt","navigate","planSeq","console","log","error","apply","arguments","renderPlans","activePlanList","renderNoPlan","length","renderActivePlans","currentDate","Date","formatDate","dateTimeStr","_dateTimeStr$split","split","_dateTimeStr$split2","dateOnly","container","accountMoney","accountBalance","divider","overlay","overlayImage","source","require","overlayText","startedAt","boldMessage","message","image","button","onPress","buttonText","showsVerticalScrollIndicator","planContainer","headerContainer","endDate","endAt","mailIconWrapper","mailImage","unclassified","notificationBubble","notificationText","categoryGroupButton","map","category","index","percentage","currentBalance","goalAmount","textColor","categoryBox","categoryTop","categoryName","title","currentMoney","categoryGroupName","groupTitle","rowContainer","percentageText","color","footer","create","flex","alignItems","justifyContent","padding","marginBottom","flexDirection","borderBottomLeftRadius","borderBottomRightRadius","marginTop","fontSize","fontWeight","textAlign","right","top","paddingHorizontal","paddingVertical","borderWidth","borderColor","elevation","progressBar","progressBarText","_objectSpread","absoluteFillObject","zIndex"],"sources":["C:/Users/SSAFY/Desktop/S09P22D107/Dotori/frontend/src/screens/Plan/PlanMainScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Image,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport FooterScreen from \"../Components/FooterScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { planInProgress } from \"../../apis/planapi\";\r\n\r\nfunction ProgressBar({ current, target }) {\r\n  const progress = (current / target) * 100;\r\n  const displayedProgress = Math.floor(progress); // Ensure it's from the unit's digit\r\n  let progressBarColor;\r\n  if (displayedProgress >= 50) {\r\n    progressBarColor = \"#5F9DF7\";\r\n  } else if (displayedProgress >= 20) {\r\n    progressBarColor = \"#89D770\";\r\n  } else if (displayedProgress >= 0) {\r\n    progressBarColor = \"#FEDE16\";\r\n  } else {\r\n    progressBarColor = \"#ED4343\"; // minus percentage\r\n  }\r\n  const absoluteProgress = Math.abs(displayedProgress);\r\n\r\n  return (\r\n    <View style={styles.progressBarContainer}>\r\n      <View\r\n        style={{\r\n          position: \"absolute\",\r\n          left: displayedProgress < 0 ? `${100 - absoluteProgress}%` : 0,\r\n          height: 17,\r\n          borderRadius: 8.5,\r\n          width: `${absoluteProgress}%`,\r\n          backgroundColor: progressBarColor,\r\n        }}\r\n      ></View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default function PlanMainScreen({ navigation, route }) {\r\n  // 토큰\r\n  const grantType = useSelector((state) => state.user.grantType);\r\n  const accessToken = useSelector((state) => state.user.accessToken);\r\n\r\n  const refreshToken = useSelector((state) => state.user.refreshToken);\r\n  const dispatch = useDispatch();\r\n  // 그 외\r\n  const isFocused = useIsFocused();\r\n  // const\r\n\r\n  // TODO: 서버에서 데이터를 가져와 아래 변수들을 설정하세요\r\n  const accountName = route.params.accountTitle;\r\n  const accountSeq = route.params.accountSeq;\r\n\r\n  const [planInfo, setPlanInfo] = useState(null);\r\n  // const accountMoney = 0;\r\n  // const plan = {\r\n  //   endDate: new Date(\"2023-12-31\"),\r\n  //   notClassifyNum: 5,\r\n  //   categoryList: [\r\n  //     {\r\n  //       categoryName: \"식비\",\r\n  //       currentMoney: 150000, // bigdecimal 타입이 JavaScript에는 없기 때문에 일단 float로 표현합니다.\r\n  //       targetMoney: 300000,\r\n  //       categoryGroupName: \"일상비용\",\r\n  //     },\r\n  //     {\r\n  //       categoryName: \"교통비\",\r\n  //       currentMoney: 40000,\r\n  //       targetMoney: 100000,\r\n  //       categoryGroupName: \"일상비용\",\r\n  //     },\r\n  //     {\r\n  //       categoryName: \"여행비\",\r\n  //       currentMoney: 1000000,\r\n  //       targetMoney: 5000000,\r\n  //       categoryGroupName: \"여가/오락비용\",\r\n  //     },\r\n  //     {\r\n  //       categoryName: \"여행비\",\r\n  //       currentMoney: 800000,\r\n  //       targetMoney: 5000000,\r\n  //       categoryGroupName: \"여가/오락비용\",\r\n  //     },\r\n  //     {\r\n  //       categoryName: \"진성비\",\r\n  //       currentMoney: -200,\r\n  //       targetMoney: 500,\r\n  //       categoryGroupName: \"여가/오락비용\",\r\n  //     },\r\n  //   ],\r\n  // }; // 예시: categoryList가 없는 경우는 빈 배열\r\n  const formatNumber = (num) => {\r\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n  };\r\n\r\n  const doPlanInquiry = async () => {\r\n    try {\r\n      const response = await planInProgress(accountSeq, accessToken, grantType);\r\n      if (response.status === 200) {\r\n        setPlanInfo(response.data);\r\n        // 종료된 계획이라면 바로 종료 명세서 보기 창으로 넘김, else는 만들 필요없음.\r\n        if(response.data.state === \"INACTIVE\" && terminatedAt){\r\n          navigation.navigate(\"SavingPlanCompleteRecipeScreen\", {accountName: accountName, accountSeq: accountSeq, planSeq: response.data.planSeq,})\r\n        }\r\n      } else {\r\n        console.log(\"계획 정보 조회 실패\", response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"오류 발생 : 계획 정보 조회 실패:\", error);\r\n    }\r\n  };\r\n\r\n  const renderPlans = () => {\r\n    if (!planInfo) return <Text>Loading...</Text>;\r\n    if (planInfo.activePlanList === null) return renderNoPlan();\r\n    if (planInfo.activePlanList.length > 0) return renderActivePlans();\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      doPlanInquiry();\r\n    }\r\n  }, [isFocused]);\r\n\r\n  const currentDate = new Date();\r\n  const formatDate = (dateTimeStr) => {\r\n    if (!dateTimeStr) return \"\"; // 입력값이 없으면 빈 문자열 반환\r\n\r\n    const [dateOnly] = dateTimeStr.split(\"T\"); // \"T\"를 기준으로 문자열을 분리하고, 첫 번째 부분만 가져옵니다.\r\n\r\n    return dateOnly; // 날짜 부분만 반환합니다.\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.accountName}>{accountName}</Text>\r\n      <Text style={styles.accountMoney}>\r\n        {planInfo ? formatNumber(planInfo.accountBalance) + \"원\" : \"Loading...\"}\r\n      </Text>\r\n\r\n      <View style={styles.divider}></View>\r\n      {/* <View style={styles.innerContainer}> */}\r\n\r\n      {planInfo && planInfo.state === \"READY\" && (\r\n        <View style={styles.overlay}>\r\n          <Image\r\n            style={styles.overlayImage}\r\n            source={require(\"../../assets/images/Hamster/OverlayHamster.png\")}\r\n          ></Image>\r\n          <Text style={styles.overlayText}>계획은</Text>\r\n\r\n          <Text style={styles.overlayText}>\r\n            {formatDate(planInfo.startedAt)} 에\r\n          </Text>\r\n          <Text style={styles.overlayText}>시작합니다요</Text>\r\n        </View>\r\n      )}\r\n      {/* 무계획 상태 */}\r\n      {planInfo && planInfo.activePlanList === null ? (\r\n        <>\r\n          <Text style={styles.boldMessage}>새로운 계획을 생성하세요.</Text>\r\n          <Text style={styles.message}>당신의 새로운 계획은 무엇인가요?</Text>\r\n          <Image\r\n            style={styles.image}\r\n            source={require(\"../../assets/images/Hamster/PlanMainHamster.png\")}\r\n          />\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => {\r\n              navigation.navigate(\"PlanCreate1Screen\", {\r\n                accountSeq: accountSeq,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={styles.buttonText}>계획 생성하기</Text>\r\n          </TouchableOpacity>\r\n        </>\r\n      ) : planInfo &&\r\n        planInfo.activePlanList &&\r\n        planInfo.activePlanList.length > 0 ? (\r\n        <>\r\n          {/* status active 상태 */}\r\n          <ScrollView\r\n            showsVerticalScrollIndicator={false}\r\n            style={styles.planContainer}\r\n          >\r\n            <View style={styles.headerContainer}>\r\n              <Text style={styles.endDate}>\r\n                {formatDate(planInfo.endAt)} 종료 예정\r\n              </Text>\r\n              <TouchableOpacity\r\n                style={styles.mailIconWrapper}\r\n                onPress={() => {\r\n                  navigation.navigate(\"PlanNotClassifyScreen\", {\r\n                    accountName: accountName,\r\n                    planSeq: planInfo.planSeq,\r\n                  });\r\n                }}\r\n              >\r\n                <Image\r\n                  style={styles.mailImage}\r\n                  source={require(\"../../assets/images/mail-icon.png\")}\r\n                />\r\n                {planInfo.unclassified > 0 && (\r\n                  <View style={styles.notificationBubble}>\r\n                    <Text style={styles.notificationText}>\r\n                      {planInfo.unclassified}\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n              </TouchableOpacity>\r\n              <TouchableOpacity style={styles.categoryGroupButton}>\r\n                <Text>카테고리 그룹</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            {planInfo.activePlanList.map((category, index) => {\r\n              const percentage = Math.floor(\r\n                (category.currentBalance / category.goalAmount) * 100\r\n              );\r\n              let textColor;\r\n              if (percentage >= 50) {\r\n                textColor = \"#5F9DF7\";\r\n              } else if (percentage >= 20) {\r\n                textColor = \"#89D770\";\r\n              } else if (percentage >= 0) {\r\n                textColor = \"#FEDE16\";\r\n              } else {\r\n                textColor = \"#ED4343\"; // minus percentage\r\n              }\r\n\r\n              return (\r\n                <TouchableOpacity\r\n                  key={index}\r\n                  style={styles.categoryBox}\r\n                  onPress={() => {\r\n                    navigation.navigate(\"PlanCategoryScreen\");\r\n                  }}\r\n                >\r\n                  <View style={styles.categoryTop}>\r\n                    <Text style={styles.categoryName}>{category.title}</Text>\r\n                    <Text style={styles.currentMoney}>\r\n                      {formatNumber(category.currentBalance)}원\r\n                    </Text>\r\n                  </View>\r\n                  <Text style={styles.categoryGroupName}>\r\n                    {category.groupTitle}\r\n                  </Text>\r\n                  <View style={styles.rowContainer}>\r\n                    <ProgressBar\r\n                      current={category.currentBalance}\r\n                      target={category.goalAmount}\r\n                    />\r\n                    <Text style={[styles.percentageText, { color: textColor }]}>\r\n                      {percentage}%\r\n                    </Text>\r\n                  </View>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </ScrollView>\r\n        </>\r\n      ) : null}\r\n\r\n      <View style={styles.footer}>\r\n        <FooterScreen navigation={navigation} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"white\",\r\n    padding: 16,\r\n  },\r\n  planContainer: {\r\n    // flex: 1,\r\n    width: \"90%\",\r\n    marginBottom: 80,\r\n  },\r\n  rowContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  //   innerContainer: {\r\n  //     flex: 1,\r\n  //     alignItems: \"center\",\r\n  //     justifyContent: \"center\",\r\n  //     backgroundColor: \"white\",\r\n  //     padding: 16,\r\n  //     width: \"100%\"\r\n  //   },\r\n  divider: {\r\n    width: \"100%\", // 원하는 너비로 조정하세요\r\n    height: 1, // 원하는 높이로 조정하세요\r\n    backgroundColor: \"#d1d1d1\", // 원하는 색상으로 변경하세요\r\n    borderBottomLeftRadius: 25,\r\n    borderBottomRightRadius: 25,\r\n    marginBottom: 30, // 원하는 여백으로 조정하세요\r\n    marginTop: -30,\r\n  },\r\n  accountName: {\r\n    fontSize: 18,\r\n    // fontWeight: \"bold\",\r\n    marginBottom: 8,\r\n    marginTop: 100,\r\n  },\r\n  accountMoney: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 100,\r\n  },\r\n  boldMessage: {\r\n    fontSize: 22,\r\n    fontWeight: \"bold\",\r\n\r\n    textAlign: \"center\",\r\n    marginBottom: 8,\r\n  },\r\n  message: {\r\n    fontSize: 15,\r\n    textAlign: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  image: {\r\n    width: 180, // 이미지 크기는 조정하세요\r\n    height: 200, // 이미지 크기는 조정하세요\r\n    marginBottom: 40,\r\n    marginTop: 40,\r\n  },\r\n  mailIconWrapper: {\r\n    position: \"relative\",\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  mailImage: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  notificationBubble: {\r\n    position: \"absolute\",\r\n    right: -5,\r\n    top: 0,\r\n    backgroundColor: \"red\",\r\n    borderRadius: 10,\r\n    width: 20, // 이 크기는 숫자의 크기에 따라 조정이 필요할 수 있습니다.\r\n    height: 20, // 이 크기는 숫자의 크기에 따라 조정이 필요할 수 있습니다.\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  notificationText: {\r\n    color: \"white\",\r\n    fontSize: 12, // 글자 크기는 필요에 따라 조정하세요.\r\n    fontWeight: \"bold\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#FF965C\",\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    marginBottom: 16,\r\n    width: \"100%\",\r\n  },\r\n  buttonText: {\r\n    fontSize: 18,\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  footer: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    marginBottom: -20,\r\n  },\r\n  headerContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    marginBottom: 20,\r\n  },\r\n  endDate: {\r\n    color: \"#777777\",\r\n  },\r\n  categoryGroupButton: {\r\n    backgroundColor: \"#F2F5F8\",\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 5,\r\n  },\r\n  categoryBox: {\r\n    borderRadius: 15,\r\n    borderWidth: 1,\r\n    borderColor: \"#d1d1d1\",\r\n    padding: 16,\r\n    width: \"100%\",\r\n    marginBottom: 10,\r\n\r\n    elevation: 5,\r\n    backgroundColor: \"white\",\r\n    marginBottom: 20,\r\n  },\r\n  categoryTop: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  categoryName: {\r\n    color: \"#858585\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 18,\r\n  },\r\n  currentMoney: {\r\n    color: \"#858585\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 18,\r\n  },\r\n  categoryGroupName: {\r\n    color: \"#7B7B7B\",\r\n    fontSize: 12,\r\n  },\r\n  progressBarContainer: {\r\n    height: 17,\r\n    borderRadius: 8.5,\r\n    backgroundColor: \"#d1d1d1\",\r\n    marginTop: 30,\r\n    flexDirection: \"row\",\r\n    width: \"85%\",\r\n  },\r\n  progressBar: {\r\n    height: 17,\r\n    borderRadius: 8.5,\r\n    backgroundColor: \"blue\", // 원하는 색상으로 변경하세요\r\n  },\r\n  progressBarText: {\r\n    position: \"absolute\", // 진행 바 위에 텍스트를 배치\r\n    right: 5, // 오른쪽에서 약간의 공간을 줌\r\n    color: \"white\", // 원하는 색상으로 변경하세요\r\n    fontWeight: \"bold\",\r\n  },\r\n  percentageText: {\r\n    textAlign: \"right\",\r\n    fontSize: 15,\r\n    marginTop: 27,\r\n  },\r\n  overlay: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    backgroundColor: \"rgba(255,255,255,0.8)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    zIndex: 1000,\r\n  },\r\n  overlayImage: {\r\n    height: 200,\r\n    width: 200,\r\n  },\r\n  overlayText: {\r\n    fontSize: 25,\r\n    // marginBottom: 5,\r\n    marginTop: 10,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}