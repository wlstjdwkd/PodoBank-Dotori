{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport HeaderComponent from \"../Components/HeaderScreen\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userBirthdateChange } from \"../../apis/userapi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function EditBirthDateScreen(_ref) {\n  var _ref2, _ref3;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var grantType = useSelector(function (state) {\n    return state.user.grantType;\n  });\n  var accessToken = useSelector(function (state) {\n    return state.user.accessToken;\n  });\n  var refreshToken = useSelector(function (state) {\n    return state.user.refreshToken;\n  });\n  var dispatch = useDispatch();\n  var currentBirthDateRef = useRef(null);\n  var changeBirthDateRef = useRef(null);\n  var _useState = useState(route.params.birthDate),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentBirthDate = _useState2[0],\n    setCurrentBirthDate = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    changeBirthDate = _useState4[0],\n    setChangeBirthDate = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isBirthDateValid = _useState6[0],\n    setIsBirthDateValid = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    changeBirthDateMessage = _useState8[0],\n    setChangeBirthDateMessage = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    responseMessage = _useState10[0],\n    setResponseMessage = _useState10[1];\n  var validateBirthDate = function validateBirthDate(text) {\n    if (!/^\\d{8}$/.test(text)) {\n      return false;\n    }\n    var year = parseInt(text.substr(0, 4));\n    var month = parseInt(text.substr(4, 2)) - 1;\n    var day = parseInt(text.substr(6, 2));\n    var date = new Date(year, month, day);\n    return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;\n  };\n  var handleUserBirthdateChangeCheck = function handleUserBirthdateChangeCheck(text) {\n    setChangeBirthDate(text);\n    if (validateBirthDate(text)) {\n      setIsBirthDateValid(true);\n      setChangeBirthDateMessage(\"생년월일 작성 완료\");\n      if (responseMessage.length > 0) {\n        setResponseMessage(\"\");\n      }\n    } else {\n      setIsBirthDateValid(false);\n      setChangeBirthDateMessage(\"정확한 날짜를 입력해주세요.\");\n    }\n  };\n  var handleUserBirthdateChange = function handleUserBirthdateChange() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      if (isBirthDateValid === true) {\n        doUserBirthdateChange();\n      } else {\n        setResponseMessage('생년월일 양식을 확인해주세요.');\n      }\n    })).apply(this, arguments);\n  };\n  var formattedBirthDate = function formattedBirthDate(date) {\n    var year = changeBirthDate.slice(0, 4);\n    var month = changeBirthDate.slice(4, 6);\n    var day = changeBirthDate.slice(6, 8);\n    return `${year}-${month}-${day}`;\n  };\n  var doUserBirthdateChange = function doUserBirthdateChange() {\n    return (_ref3 = _ref3 || _asyncToGenerator(function* () {\n      var data = formattedBirthDate(changeBirthDate);\n      try {\n        var response = yield userBirthdateChange(data, accessToken, grantType);\n        if (response.status === 200) {\n          setIsBirthDateValid(true);\n          setResponseMessage(\"생년월일 변경 성공\");\n          console.log('생년월일 변경 성공');\n          Alert.alert('', '생년월일이 변경되었습니다.');\n          navigation.navigate(\"MyPageScreen\");\n        } else {\n          setResponseMessage(\"오류 발생 : 생년월일 변경 실패\");\n          console.log('오류 발생 : 생년월일 변경 실패', response.status);\n          setIsBirthDateValid(false);\n        }\n      } catch (error) {\n        console.log('오류발생 : 생년월일 변경 실패', error);\n        setIsBirthDateValid(false);\n      }\n    })).apply(this, arguments);\n  };\n  useEffect(function () {\n    changeBirthDateRef.current.focus();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(HeaderComponent, {\n      title: \"\\uC0DD\\uB144\\uC6D4\\uC77C \\uBCC0\\uACBD\",\n      navigation: navigation\n    }), _jsx(View, {\n      style: styles.iconContainer,\n      children: _jsx(Image, {\n        style: styles.lockIcon,\n        source: require(\"../../assets/icon/birthday.png\")\n      })\n    }), _jsxs(View, {\n      style: styles.passwordInput,\n      children: [_jsx(Text, {\n        style: styles.passwordPlaceholder,\n        children: \"*\"\n      }), _jsx(Text, {\n        style: styles.passwordPlaceholder,\n        children: \"*\"\n      }), _jsx(Text, {\n        style: styles.passwordPlaceholder,\n        children: \"*\"\n      }), _jsx(Text, {\n        style: styles.passwordPlaceholder,\n        children: \"*\"\n      })]\n    }), _jsxs(View, {\n      style: styles.passwordInfoContainer,\n      children: [_jsx(Text, {\n        style: styles.passwordChangeInfoText,\n        children: \"\\uC0DD\\uB144\\uC6D4\\uC77C\\uC744 \\uBCC0\\uACBD\\uD574\\uC8FC\\uC138\\uC694.\"\n      }), _jsxs(Text, {\n        style: styles.passwordInfoText,\n        children: [\"\\uAE30\\uC874 \\uC0DD\\uB144\\uC6D4\\uC77C\\uC744 \\uD655\\uC778\\uD558\\uACE0, \", \"\\n\", \"\\uBCC0\\uACBD\\uD560 \\uC0DD\\uB144\\uC6D4\\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"]\n      })]\n    }), _jsx(TextInput, {\n      style: [styles.inputBox, {}],\n      placeholder: \"기존 생년월일 : \" + currentBirthDate,\n      placeholderTextColor: \"black\",\n      returnKeyType: \"next\",\n      keyboardType: \"number-pad\",\n      ref: currentBirthDateRef,\n      onChangeText: function onChangeText(text) {\n        handlePasswordCurrentCheck(text);\n      },\n      onSubmitEditing: function onSubmitEditing() {\n        changeBirthDateRef.current.focus();\n      },\n      editable: false\n    }), _jsx(Text, {\n      style: [styles.pwMessage, {}]\n    }), _jsx(TextInput, {\n      style: styles.inputBox,\n      placeholder: \"\\uBCC0\\uACBD\\uD560 \\uC0DD\\uB144\\uC6D4\\uC77C (\\uC22B\\uC790\\uB9CC \\uC785\\uB825)\",\n      returnKeyType: \"done\",\n      keyboardType: \"number-pad\",\n      ref: changeBirthDateRef,\n      value: changeBirthDate,\n      onChangeText: function onChangeText(text) {\n        handleUserBirthdateChangeCheck(text);\n      },\n      maxLength: 8,\n      onSubmitEditing: function onSubmitEditing() {\n        handleUserBirthdateChange();\n      },\n      onFocus: function onFocus() {\n        if (!changeBirthDate) {}\n      }\n    }), _jsx(Text, {\n      style: [styles.pwMessage, {\n        color: isBirthDateValid ? \"blue\" : \"red\"\n      }],\n      children: changeBirthDateMessage\n    }), _jsx(View, {\n      style: {},\n      children: _jsx(Text, {\n        style: {\n          textAlign: 'center',\n          color: isBirthDateValid ? \"blue\" : \"red\"\n        },\n        children: responseMessage\n      })\n    }), _jsx(TouchableOpacity, {\n      style: [styles.changePasswordButton, {\n        backgroundColor: isBirthDateValid ? \"#FF965C\" : 'grey'\n      }],\n      onPress: function onPress() {\n        handleUserBirthdateChange();\n      },\n      disabled: !isBirthDateValid,\n      children: _jsx(Text, {\n        style: styles.changePasswordButtonText,\n        children: \"\\uC0DD\\uB144\\uC6D4\\uC77C \\uBCC0\\uACBD\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    padding: 16\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 16,\n    marginTop: 15\n  },\n  arrowIcon: {\n    width: 20,\n    height: 20\n  },\n  iconContainer: {\n    alignItems: \"center\",\n    marginTop: 50\n  },\n  lockIcon: {\n    width: 100,\n    height: 100,\n    marginBottom: 8\n  },\n  passwordInput: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 16\n  },\n  passwordPlaceholder: {\n    fontSize: 24,\n    borderBottomWidth: 1,\n    width: 20,\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n    marginLeft: 10,\n    marginTop: 10,\n    marginBottom: 30\n  },\n  passwordChangeText: {\n    fontSize: 24,\n    flex: 1,\n    textAlign: \"center\"\n  },\n  passwordInfoContainer: {\n    alignItems: \"center\",\n    marginBottom: 60\n  },\n  passwordChangeInfoText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  passwordInfoText: {\n    fontSize: 14,\n    textAlign: 'center',\n    color: \"#7B7B7B\"\n  },\n  inputBox: {\n    borderWidth: 1,\n    backgroundColor: \"#F5F3F3\",\n    borderColor: \"#BAC0CA\",\n    borderRadius: 10,\n    padding: 6,\n    fontSize: 12,\n    paddingLeft: 12,\n    marginHorizontal: 20,\n    width: \"90%\",\n    alignSelf: \"center\"\n  },\n  changePasswordButton: {\n    backgroundColor: \"#FF965C\",\n    borderRadius: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 40,\n    marginTop: 16,\n    width: \"90%\",\n    alignSelf: \"center\"\n  },\n  changePasswordButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 15\n  },\n  pwMessage: {\n    marginTop: 0,\n    marginBottom: 10,\n    fontSize: 12,\n    marginHorizontal: 20\n  }\n});","map":{"version":3,"names":["React","useEffect","useRef","useState","View","Text","StyleSheet","TouchableOpacity","Image","TextInput","Button","Alert","HeaderComponent","useDispatch","useSelector","userBirthdateChange","jsx","_jsx","jsxs","_jsxs","EditBirthDateScreen","_ref","_ref2","_ref3","navigation","route","grantType","state","user","accessToken","refreshToken","dispatch","currentBirthDateRef","changeBirthDateRef","_useState","params","birthDate","_useState2","_slicedToArray","currentBirthDate","setCurrentBirthDate","_useState3","_useState4","changeBirthDate","setChangeBirthDate","_useState5","_useState6","isBirthDateValid","setIsBirthDateValid","_useState7","_useState8","changeBirthDateMessage","setChangeBirthDateMessage","_useState9","_useState10","responseMessage","setResponseMessage","validateBirthDate","text","test","year","parseInt","substr","month","day","date","Date","getFullYear","getMonth","getDate","handleUserBirthdateChangeCheck","length","handleUserBirthdateChange","_asyncToGenerator","doUserBirthdateChange","apply","arguments","formattedBirthDate","slice","data","response","status","console","log","alert","navigate","error","current","focus","style","styles","container","children","title","iconContainer","lockIcon","source","require","passwordInput","passwordPlaceholder","passwordInfoContainer","passwordChangeInfoText","passwordInfoText","inputBox","placeholder","placeholderTextColor","returnKeyType","keyboardType","ref","onChangeText","handlePasswordCurrentCheck","onSubmitEditing","editable","pwMessage","value","maxLength","onFocus","color","textAlign","changePasswordButton","backgroundColor","onPress","disabled","changePasswordButtonText","create","flex","padding","header","flexDirection","alignItems","marginBottom","marginTop","arrowIcon","width","height","justifyContent","fontSize","borderBottomWidth","fontWeight","marginLeft","passwordChangeText","borderWidth","borderColor","borderRadius","paddingLeft","marginHorizontal","alignSelf"],"sources":["C:/Users/SSAFY/Desktop/S09P22D107/Dotori/frontend/src/screens/MyPage/EditBirthDateScreen.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  Alert,\r\n} from \"react-native\";\r\nimport HeaderComponent from \"../Components/HeaderScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userBirthdateChange} from \"../../apis/userapi\"\r\n\r\nexport default function EditBirthDateScreen({ navigation, route }) {\r\n  // 토큰\r\n  const grantType =  useSelector((state)=>state.user.grantType)\r\n  const accessToken =  useSelector((state)=>state.user.accessToken)\r\n  const refreshToken =  useSelector((state)=>state.user.refreshToken)\r\n  const dispatch = useDispatch()\r\n  // 그 외\r\n  const currentBirthDateRef = useRef(null)\r\n  const changeBirthDateRef = useRef(null)\r\n\r\n  const [currentBirthDate, setCurrentBirthDate] = useState(route.params.birthDate)\r\n  const [changeBirthDate, setChangeBirthDate] = useState(\"\")\r\n  const [isBirthDateValid, setIsBirthDateValid] = useState(false)\r\n  const [changeBirthDateMessage, setChangeBirthDateMessage] = useState(\"\")\r\n  const [responseMessage, setResponseMessage] = useState(\"\")\r\n  \r\n\r\n  // const validateBirthDate = (text) => {\r\n  //   const regex = /^01\\d{6}$/;\r\n  //   return regex.test(text);\r\n  // };\r\n  const validateBirthDate = (text) => {\r\n    if (!/^\\d{8}$/.test(text)) {\r\n      return false; // 8자리 숫자가 아니면 유효하지 않음\r\n    }\r\n    const year = parseInt(text.substr(0, 4));\r\n    const month = parseInt(text.substr(4, 2)) - 1; // 월은 0부터 시작하므로 1을 빼줍니다.\r\n    const day = parseInt(text.substr(6, 2));  \r\n    // Date 객체를 생성하여 유효한 날짜인지 확인합니다.\r\n    const date = new Date(year, month, day);\r\n    // Date 객체의 날짜가 유효하면 (예: 20211231), 유효한 날짜로 간주합니다.\r\n    // Date 객체의 날짜가 유효하지 않으면 (예: 20210231), 유효하지 않은 날짜로 간주합니다.\r\n    return (\r\n      date.getFullYear() === year &&\r\n      date.getMonth() === month &&\r\n      date.getDate() === day\r\n    );\r\n  };\r\n\r\n  const handleUserBirthdateChangeCheck = (text) => {\r\n    setChangeBirthDate(text)\r\n    if(validateBirthDate(text)){\r\n      setIsBirthDateValid(true)\r\n      setChangeBirthDateMessage(\"생년월일 작성 완료\")\r\n      if(responseMessage.length>0){\r\n        setResponseMessage(\"\")\r\n      }\r\n    }else{\r\n      setIsBirthDateValid(false)\r\n      setChangeBirthDateMessage(\"정확한 날짜를 입력해주세요.\")\r\n    }\r\n  }\r\n\r\n  const handleUserBirthdateChange = async () =>{\r\n    if(isBirthDateValid === true){\r\n      doUserBirthdateChange()\r\n    }else{\r\n      setResponseMessage('생년월일 양식을 확인해주세요.')\r\n    }\r\n  }\r\n\r\n  const formattedBirthDate  = (date) =>{\r\n    const year = changeBirthDate.slice(0, 4);\r\n    const month = changeBirthDate.slice(4, 6);\r\n    const day = changeBirthDate.slice(6, 8);\r\n    return `${year}-${month}-${day}`\r\n  }\r\n\r\n  const doUserBirthdateChange = async () =>{\r\n    const data = formattedBirthDate(changeBirthDate)\r\n    try{\r\n      const response = await userBirthdateChange(data, accessToken, grantType)\r\n      if(response.status === 200){\r\n        setIsBirthDateValid(true)\r\n        setResponseMessage(\"생년월일 변경 성공\")\r\n        console.log('생년월일 변경 성공')\r\n        Alert.alert('','생년월일이 변경되었습니다.')\r\n        navigation.navigate(\"MyPageScreen\")\r\n      }else{\r\n        setResponseMessage(\"오류 발생 : 생년월일 변경 실패\")\r\n        console.log('오류 발생 : 생년월일 변경 실패', response.status)\r\n        setIsBirthDateValid(false)\r\n      }\r\n    }catch(error){\r\n      console.log('오류발생 : 생년월일 변경 실패', error)\r\n      setIsBirthDateValid(false)\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    changeBirthDateRef.current.focus()\r\n  },[])\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <HeaderComponent title=\"생년월일 변경\" navigation={navigation}/>\r\n\r\n      <View style={styles.iconContainer}>\r\n        <Image\r\n          style={styles.lockIcon}\r\n          source={require(\"../../assets/icon/birthday.png\")} // 스마트폰 이미지\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.passwordInput}>\r\n        <Text style={styles.passwordPlaceholder}>*</Text>\r\n        <Text style={styles.passwordPlaceholder}>*</Text>\r\n        <Text style={styles.passwordPlaceholder}>*</Text>\r\n        <Text style={styles.passwordPlaceholder}>*</Text>\r\n      </View>\r\n\r\n      {/* 비밀번호 안내 텍스트 */}\r\n      <View style={styles.passwordInfoContainer}>\r\n        <Text style={styles.passwordChangeInfoText}>\r\n          생년월일을 변경해주세요.\r\n        </Text>\r\n        <Text style={styles.passwordInfoText}>\r\n          기존 생년월일을 확인하고, {\"\\n\"}변경할 생년월일을 입력해주세요.\r\n        </Text>\r\n      </View>\r\n\r\n      {/* 텍스트 입력란 */}\r\n      <TextInput\r\n        style={[styles.inputBox, {}]}\r\n        placeholder={\"기존 생년월일 : \" + currentBirthDate}\r\n        placeholderTextColor=\"black\"\r\n        returnKeyType=\"next\"\r\n        keyboardType=\"number-pad\"\r\n        ref={currentBirthDateRef}\r\n        // value={currentBirthDate}\r\n        onChangeText={(text)=>{\r\n          handlePasswordCurrentCheck(text)\r\n        }}\r\n        onSubmitEditing={()=>{\r\n          changeBirthDateRef.current.focus()\r\n        }}\r\n        editable={false}\r\n      />\r\n      <Text style={[styles.pwMessage, {}]}></Text>\r\n\r\n      <TextInput\r\n        style={styles.inputBox}\r\n        placeholder=\"변경할 생년월일 (숫자만 입력)\"\r\n        returnKeyType=\"done\"\r\n        keyboardType=\"number-pad\"\r\n        ref={changeBirthDateRef}\r\n        value={changeBirthDate}\r\n        onChangeText={(text)=>{\r\n          handleUserBirthdateChangeCheck(text)\r\n        }}\r\n        maxLength={8}\r\n        onSubmitEditing={()=>{\r\n          handleUserBirthdateChange()\r\n        }}\r\n        onFocus={()=>{\r\n          if(!changeBirthDate){\r\n            \r\n          }\r\n        }}\r\n      />\r\n      <Text\r\n        style={[styles.pwMessage, {\r\n          color: (isBirthDateValid) ? \"blue\" : \"red\",\r\n        }]}\r\n      >\r\n        {changeBirthDateMessage}\r\n      </Text>\r\n\r\n      <View style={{}}>\r\n        <Text style={{\r\n          textAlign:'center',\r\n          color: (isBirthDateValid) ? \"blue\" : \"red\",\r\n        }}>{responseMessage}</Text>\r\n      </View>\r\n      \r\n\r\n      {/* 변경 완료 버튼 */}\r\n      <TouchableOpacity\r\n        style={[styles.changePasswordButton, {backgroundColor:isBirthDateValid?\"#FF965C\":'grey'}]}\r\n        onPress={() => {\r\n          handleUserBirthdateChange()\r\n        }}\r\n        disabled={!isBirthDateValid}\r\n      >\r\n        <Text style={styles.changePasswordButtonText}>생년월일 변경</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n    padding: 16,\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 16,\r\n    marginTop: 15,\r\n  },\r\n  arrowIcon: {\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  iconContainer: {\r\n    alignItems: \"center\",\r\n    marginTop: 50,\r\n  },\r\n  lockIcon: {\r\n    width: 100,\r\n    height: 100,\r\n    marginBottom: 8,\r\n  },\r\n  passwordInput: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\", // 가로 중앙 정렬\r\n    marginBottom: 16,\r\n  },\r\n  passwordPlaceholder: {\r\n    fontSize: 24,\r\n    borderBottomWidth: 1,\r\n    width: 20, // 각 * 텍스트 너비 설정\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n    marginLeft: 10, // 각 * 텍스트 사이 간격 조절\r\n    marginTop: 10,\r\n    marginBottom: 30,\r\n  },\r\n  passwordChangeText: {\r\n    fontSize: 24,\r\n    flex: 1, // 텍스트가 남은 공간을 모두 차지하도록 설정\r\n    textAlign: \"center\",\r\n  },\r\n  passwordInfoContainer: {\r\n    alignItems: \"center\",\r\n    marginBottom: 60,\r\n  },\r\n  passwordChangeInfoText: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  passwordInfoText: {\r\n    fontSize: 14,\r\n    textAlign: 'center',\r\n    color: \"#7B7B7B\",\r\n  },\r\n  inputBox: {\r\n    borderWidth: 1,\r\n    backgroundColor: \"#F5F3F3\",\r\n    borderColor: \"#BAC0CA\",\r\n    borderRadius: 10,\r\n    padding: 6,\r\n    // marginBottom: 16,\r\n    fontSize: 12,\r\n    paddingLeft: 12,\r\n    marginHorizontal: 20,\r\n    width: \"90%\",\r\n    alignSelf: \"center\",\r\n  },\r\n  changePasswordButton: {\r\n    backgroundColor: \"#FF965C\", // 배경색\r\n    borderRadius: 8, // BorderRadius 설정\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: 40, // 버튼 높이 조절\r\n    marginTop: 16, // 버튼을 아래로 내립니다.\r\n    width: \"90%\",\r\n    alignSelf: \"center\",\r\n    // marginTop: 130,\r\n    // marginTop: 100,\r\n  },\r\n  changePasswordButtonText: {\r\n    color: \"white\", // 텍스트 색상\r\n    fontWeight: \"bold\", // 텍스트를 bold체로 설정\r\n    fontSize: 15,\r\n  },\r\n  pwMessage:{\r\n    marginTop: 0,\r\n    marginBottom: 10,\r\n    fontSize: 12,\r\n    marginHorizontal: 20\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}